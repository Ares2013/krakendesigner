!function(e){var n={};function t(a){if(n[a])return n[a].exports;var i=n[a]={i:a,l:!1,exports:{}};return e[a].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:a})},t.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=12)}([function(e,n){angular.module("KrakenDesigner").run(["$templateCache",function(e){"use strict";e.put("/src/app/forms/backends.html",'<div class="box box-success">\n    <div class="box-header with-border">\n        <h3 class="box-title">Available hosts</h3>\n        <div class="pull-right">\n            <span ng-if="sd_providers.hosts.length === 0 || !sd_providers.hosts" class="pull-right-container" data-toggle="tooltip" data-original-title="The service needs at least 1 host to work">\n                <i class="fa fa-warning pull-right icon-warning"></i>\n            </span>\n        </div>\n    </div>\n    <div class="box-body">\n        <p>Add here all the API hostnames where KrakenD will retrieve the data from. If you don\'t use a service discovery to resolve host names choose <em>None</em> from the following <strong>discovery providers</strong> list:</p>\n\n        <div class="col-sm-6 form-group">\n            <div class="radio">\n                <label>\n                    <input type="radio" ng-model="service_discovery_type" value="static" ng-init="service_discovery_type=\'static\'">\n                    None (static resolution)\n                </label>\n            </div>\n            <div class="radio">\n                <label>\n                  <input type="radio" ng-model="service_discovery_type" value="dns">\n                  DNS SRV\n              </label>\n          </div>\n      </div>\n      <div class="col-sm-6 form-group">\n        <div class="radio">\n            <label>\n              <input type="radio" ng-model="service_discovery_type" value="etcd" ng-disabled="!hasMiddleware(\'github_com/devopsfaith/krakend-etcd\')">\n              Etcd\n          </label>\n      </div>\n      <div class="radio">\n        <label>\n          <input type="radio" ng-model="service_discovery_type" value="custom">\n          Custom\n      </label>\n  </div>\n</div>\n<div class="col-sm-12 form-group">\n    <div class="input-group">\n        <input class="form-control"\n        placeholder="http://api.your.server:8080"\n        ng-model="hostname">\n        <div class="input-group-btn">\n            <button type="button" class="btn btn-success" ng-click="addHost(hostname, service_discovery_type)"><i\n                class="fa fa-plus"></i> Add {{ service_discovery_type }} host\n            </button>\n        </div>\n    </div>\n</div>\n<div class="col-sm-12 form-group">\n    <ul class="list-unstyled">\n        <li ng-repeat="(index,host) in sd_providers.hosts">\n            <a class="badge badge-remove" ng-click="deleteIndexFromArray(index, \'$scope.sd_providers.hosts\')"\n            title="Click to delete host"><i class="fa fa-times"></i> {{ host.sd }} - {{ host.host }}</a>\n        </li>\n    </ul>\n</div>\n</div>\n</div>\n'),e.put("/src/app/forms/dashboard.html",'<div class="col-lg-6">\n    <div class="box box-primary">\n        <div class="box-header with-border">\n            <h3 class="box-title">Creating your first service?</h3>\n        </div>\n        <div class="box-body">\n            <p>Hi, thanks for using the <strong>KrakenDesigner</strong>. This application creates the configuration\n                that the KrakenD service loads. In order to configure properly the service take at least the following\n                <strong>steps:</strong></p>\n\n            <ul class="nav nav-pills nav-justified setup-panel">\n                <li ng-class="sd_providers.length === 0 || !sd_providers ? \'\' : \'bg-success\'">\n                    <a href="/#/service">\n                        <h4 class="list-group-item-heading">Step 1</h4>\n                        <p class="list-group-item-text text-bold">Set the configuration</p>\n                    </a></li>\n                <li ng-class="service.endpoints.length === 0 || !service.endpoints? \'\' : \'bg-success\'">\n                    <a href="/#/endpoints">\n                    <h4 class="list-group-item-heading">Step 2</h4>\n                    <p class="list-group-item-text text-bold">Add an endpoint</p>\n                </a>\n                </li>\n                <li ng-class="saved_once ? \'bg-success\' : \'\' ">\n                    <a href="/#/" ng-click="save()">\n                    <h4 class="list-group-item-heading">Step 3</h4>\n                    <p class="list-group-item-text text-bold">Download config</p>\n                </a></li>\n            </ul>\n        </div>\n    </div>\n    <div class="box box-info">\n        <div class="box-header with-border">\n            <h3 class="box-title">Finished editing?</h3>\n        </div>\n        <div class="box-body">\n            <p>Play with the forms as much as you want, nothing is saved until you press save. Every time you have\n                finished configuring the service (or if you want to continue later) download the\n                configuration file to your computer.</p>\n            <p>The configuration file is needed to start the KrakenD service and contains the application\n                definition.</p>\n            <button id="download" name="download" class="btn btn-primaryli btn-lg" ng-click="save()">\n                <i class="fa fa-save"></i> Download this configuration\n            </button>\n        </div>\n    </div>\n</div>\n<div class="col-lg-6">\n\n\n    <div class="box box-info">\n        <div class="box-header with-border">\n            <h3 class="box-title">Load a previous configuration file</h3>\n        </div>\n        <div class="box-body">\n            <p>Drag and drop a previous configuration file below to resume a configuration. After reviewing the values\n                press the button to load it in the application. Only <code>application/json</code> file type is accepted\n                by the KrakenDesigner.\n            </p>\n\n            <div id="drop_zone">\n                <h2>Drop configuration file to load it.</h2>\n                <small>(No content is uploaded to server, everything stays in your browser)</small>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div id="dropzone_modal" class="modal">\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">×</span></button>\n                <h4 class="modal-title">Load this configuration?</h4>\n            </div>\n            <div class="modal-body">\n\n                <div ng-if="dropzone_loaded" class="alert alert-success alert-dismissible">\n                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true"\n                            ng-click="dropzone_loaded=!dropzone_loaded">×\n                    </button>\n                    <h4><i class="fa fa-check"></i> Configuration loaded</h4>\n                    The configuration file has been successfully loaded in KrakenDesigner.\n                </div>\n\n\n                <p>Current session data will be replaced with the configuration below. Proceed? </p>\n                <pre>{{ service_configuration }}</pre>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancel</button>\n                <button type="button" ng-click="loadFile()" class="btn btn-primary">Yes, load this configuration\n                </button>\n            </div>\n        </div>\n        \x3c!-- /.modal-content --\x3e\n    </div>\n    \x3c!-- /.modal-dialog --\x3e\n</div>\n\n<script src="http://www.krakend.io/js/dragndrop.js"><\/script>\n'),e.put("/src/app/forms/endpoints.html",'<div class="box box-primary collapsed-box" ng-repeat="(endpoint_index,endpoint) in service.endpoints"\n     ng-class="isValidEndpoint(endpoint.endpoint) ? \'\' : \'box-danger\'">\n    <div class="box-header with-border">\n        <h3 class="box-title">\n            <a data-widget="collapse">\n                <i class="fa fa-plus"></i>\n\n                {{ endpoint.endpoint }}\n                <code class="small" ng-if="endpoint.querystring_params.length > 0">\n                    ?<span ng-repeat="qs in endpoint.querystring_params">{{ qs }}=X{{ $last ? \'\' : \'&\' }}</span>\n                </code>\n            </a>\n        </h3>\n\n        <div class="box-tools pull-right">\n            <span ng-hide="isValidEndpoint(endpoint.endpoint)" class="badge label-danger"><i class="fa fa-warning"></i> Error(s)</span>\n            <span class="badge">{{ endpoint.output_encoding }}</span>\n            <span class="badge method_{{ endpoint.method }}">{{ endpoint.method }}</span>\n            <button type="button" class="btn btn-box-tool"\n                    ng-click="deleteEndpoint(endpoint_index, \'This endpoint and all the information will be deleted. Do you want to proceed?\')">\n                <i class="fa fa-trash"></i></button>\n        </div>\n    </div>\n    \x3c!-- /.box-header --\x3e\n    <div class="box-body">\n        \x3c!-- Search Endpoints\n        <form action="#" method="get" class="sidebar-form">\n            <input type="search" id="q" ng-model="q" name="q" class="form-control" placeholder="Filter Endpoints...">\n        </form>\n        <ul class="treeview-menu menu-open">\n            <li class="animate-repeat" ng-repeat="endpoint in service.endpoints| filter:q as results">\n                <a>{{ endpoint.endpoint }}\n                        <span class="pull-right-container">\n                            <i class="fa fa-angle-left pull-right"></i>\n                        </span>\n                </a>\n                <ul class="treeview-menu menu-open">\n                    <li ng-repeat="backend in endpoint.backend">\n                        <a>{{ backend.url_pattern }}</a>\n                    </li>\n                </ul>\n            </li>\n            <li class="animate-repeat" ng-if="results.length === 0">\n                <a><strong>No results found...</strong></a>\n            </li>\n        </ul>\n        --\x3e\n        <form class="form-horizontal" novalidate>\n            <fieldset>\n                <div ng-class="isValidEndpoint(endpoint.endpoint) ? \'\' : \'has-error\'" class="form-group form-group-lg">\n                    <div class="col-md-8 col-sm-6">\n                        <label>KrakenD Endpoint</label>\n                        <input type="text"\n                               placeholder="/users/{username}"\n                               class="form-control input-md"\n                               required="" ng-model="endpoint.endpoint">\n                        <span class="help-block">This is the URI your clients will connect to. Must start with slash.\n                                  Use curly braces to insert <code>{placeholders}</code> that can be passed to the\n                            backends.</span>\n                    </div>\n                    <div class="col-md-2 col-sm-4">\n                        <label>Method</label>\n                        <select id="endpoint.method"\n                                ng-model="endpoint.method"\n                                name="endpoint.method"\n                                class="form-control"\n                                ng-change="updateNonGETBackends(endpoint_index, \'{{ endpoint.method }}\', \'Non-GET methods forward the request to a single backend query (the first one). The rest will be deleted from this form. Proceed?\')">\n                            <option value="GET">GET</option>\n                            <option value="POST">POST</option>\n                            <option value="PUT">PUT</option>\n                            <option value="DELETE">DELETE</option>\n                        </select>\n                        <span class="help-block">HTTP verb</span>\n                    </div>\n                    <div class="col-md-2 col-sm-2">\n                        <label>Output</label>\n                        <select class="form-control"\n                            ng-model="endpoint.output_encoding"\n                            id="endpoint.output_encoding"\n                            name="endpoint.output_encoding"\n                            ng-init="endpoint.output_encoding=service.output_encoding",\n                            ng-change="setNoOpEncoding(endpoint_index, endpoint.output_encoding, \'{{ endpoint.output_encoding }}\', null)">\n                            <option value="json">JSON</option>\n                            <option value="negotiate">Negotiate content</option>\n                            <option value="string">String (text/plain)</option>\n                            <option value="noop">No-op (just proxy)</option>\n                        </select>\n                        <span class="help-block">Encoding used</span>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <div class="col-md-6">\n                        <label>Recognized query string parameters (?param=value)</label>\n                        <div class="input-group">\n                            <input class="form-control"\n                                   placeholder="parameter_name"\n                                   type="url"\n                                   id="addQuerystring_{{ endpoint_index }}">\n                            <div class="input-group-btn">\n                                <button type="button" class="btn btn-success" ng-click="addQuerystring(endpoint_index)">\n                                    <i class="fa fa-plus"></i> Add parameter\n                                </button>\n                            </div>\n                        </div>\n                        <div class="help-block">\n                            <ul class="list-inline">\n                                <li ng-repeat="(qs_index,qs) in endpoint.querystring_params">\n                                    <a class="badge badge-remove"\n                                    ng-click="deleteQuerystring(qs_index,endpoint_index)"\n                                    title="Click to delete parameter"><i class="fa fa-times"></i> {{ qs }} </a>\n                                </li>\n                                <li ng-if="!endpoint.querystring_params.length">No query parameters are active yet. Typical\n                                    parameters are <code>page</code>, <code>limit</code>, <code>search</code>...\n                                </li>\n                            </ul>\n                        </div>\n                        <span class="help-block">Query string parameters to be passed to the backends when present.\n                            Write only the name of the\n                            parameter, no question mark or equal symbols.</span>\n                    </div>\n                    <div class="col-md-3">\n                        <label>Rate limit</label>\n                        <span class="label label-success" ng-if="endpoint.extra_config[\'github.com/devopsfaith/krakend-ratelimit/juju/router\']">on</span>\n                        <span class="label label-default" ng-if="!endpoint.extra_config[\'github.com/devopsfaith/krakend-ratelimit/juju/router\']">off</span>\n                        <br />\n                        <button class="btn btn-default btn-flat" data-toggle="modal" data-target="#throttling-modal-{{ endpoint_index }}">\n                            <i class="fa fa-wrench"></i> Throttling\n                        </button>\n                        <span class="help-block">\n                            Enable usage limits for this endpoint\n                        </span>\n                </div>\n                    <div class="col-md-3">\n                        <label>Pipe composition</label>\n                        <br />\n                        <button class="btn btn-default btn-flat" data-toggle="modal" data-target="#advanced-pipe-{{ endpoint_index }}">\n                            <i class="fa fa-wrench"></i> Override\n                        </button>\n                        <span class="help-block">\n                            Behaviour of the proxy pipe.\n                        </span>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <div class="col-md-3" ng-class="isInteger(endpoint.concurrent_calls) ? \'\' : \'has-error\'">\n                        <label>Concurrent Calls</label>\n                        <input type="text" class="form-control" ng-model="endpoint.concurrent_calls" ng-init="endpoint.concurrent_calls=1">\n                        <span class="help-block">\n                            <p ng-hide="isInteger(endpoint.concurrent_calls)" class="badge label-danger">\n                                <i class="fa fa-warning"></i> Use an integer</p>\n                          <p>Parallel requests you want to send to the backend <strong>for the same request</strong>. Fastest request is taken and the rest are discarded. This value should be between 1 and 3 (or higher if your backend can support very high load)</p>\n                        </span>\n                    </div>\n                    <div class="col-md-3">\n                        <label>Headers passing to backend</label>\n                        <div class="input-group">\n                            <input class="form-control" placeholder="header_name" type="text" required="" ng-model="input_header">\n                            <div class="input-group-btn">\n                                <button type="button" class="btn btn-success" ng-click="addHeaderPassing(endpoint_index,input_header)">\n                                    <i class="fa fa-plus"></i> Add\n                                </button>\n                            </div>\n                        </div>\n                        <span class="help-block">Allowed headers to pass from client to each of the backends. These headers are not an addition, but a replacement when they are set. Use only if you need custom headers to pass back but ensure to declare all needed headers (including <code>Content-Type</code>).</span>\n                        <div class="input-group">\n                            <ul class="list-unstyled">\n                                <li ng-repeat="(index,header) in endpoint.headers_to_pass">\n                                    <a class="badge badge-remove"\n                                       ng-click="deleteHeaderPassing(endpoint_index,index)"><i class="fa fa-times"></i>\n                                        {{ header }}</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div class="col-md-3">\n                        <label>Timeout and Cache TTL</label>\n                        <br />\n                        <button class="btn btn-default btn-flat" data-toggle="modal" data-target="#endpoint-modal-{{ endpoint_index }}">\n                            <i class="fa fa-wrench"></i> Override defaults\n                        </button>\n                        <span class="help-block">\n                          Override default settings for this endpoint.\n                        </span>\n                    </div>\n                    <div class="col-md-3">\n                        <label>Security headers</label>\n                        <br/>\n                        <button class="btn btn-default btn-flat"\n                                data-toggle="modal"\n                                data-target="#security-modal-{{ endpoint_index }}"\n                                ng-disabled="!hasMiddleware(\'github_com/devopsfaith/krakend-httpsecure\')">\n                            <i class="fa fa-wrench"></i> Override defaults\n                        </button>\n                        <span class="help-block">\n                          Override default settings for this endpoint.\n                        </span>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <div class="col-md-12">\n                        <div class="col-md-6">\n                            <middleware\n                                template="jose_validator.html"\n                                namespace="\'github.com/devopsfaith/krakend-jose/validator\'"\n                                data="endpoint">\n                            </middleware>\n                        </div>\n                        <div class="col-md-6">\n                            <middleware\n                                template="jose_signer.html"\n                                namespace="\'github.com/devopsfaith/krakend-jose/signer\'"\n                                data="endpoint">\n                            </middleware>\n                        </div>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <div class="col-md-12">\n                         <h4>Backend API calls (where the data comes from)</h4>\n                    </div>\n                    <div class="col-md-12" ng-if="endpoint.extra_config[\'github.com/devopsfaith/krakend/proxy\'].static">\n                        <div class="box box-info box-solid">\n                            <div class="box-header with-border">\n                                <h3 class="box-title">Static Response</h3>\n                                <div class="box-tools pull-right">\n                                    <button type="button" class="btn btn-box-tool" data-widget="collapse">\n                                        <i class="fa fa-minus"></i>\n                                    </button>\n                                    <button type="button" class="btn btn-box-tool" ng-click="deleteStaticResponse(endpoint_index)">\n                                        <i class="fa fa-trash"></i>\n                                    </button>\n                                </div>\n                            </div>\n\n                            <div class="box-body">\n                                <p>The following static data will be added to the response following the selected strategy. The input must be a JSON object (ensure to start and end with curly braces <code>{}</code>)</p>\n                                <div class="col-md-8">\n\n                                    <label class="control-label">Response</label>\n                                    <textarea json-formatter class="form-control" ng-model="endpoint.extra_config[\'github.com/devopsfaith/krakend/proxy\'].static.data"></textarea>\n                                    <p ng-show="service.extra_config[\'krakendesigner\'].json_errors" class="badge label-danger">\n                                        <i class="fa fa-warning"></i> Syntax error - {{ service.extra_config[\'krakendesigner\'].json_errors}}\n                                    </p>\n                                    <span class="help-block">Paste here your JSON response</span>\n                                </div>\n                                <div class="col-md-4">\n                                    <label class="control-label">Strategy</label>\n                                    <select class="form-control" ng-model="endpoint.extra_config[\'github.com/devopsfaith/krakend/proxy\'].static.strategy">\n                                        <option value="always">Always - Present in every response</option>\n                                        <option value="success">Success - Present in every non-failed response </option>\n                                        <option value="errored">Errored - Present in every failed response (error not nil)</option>\n                                        <option value="incomplete">Incomplete - Present in incomplete responses</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-md-12"\n                         ng-repeat="(backend_index,backend) in endpoint.backend">\n                        <div class="box box-primary box-solid">\n                            <div class="box-header with-border">\n                                <h3 class="box-title">{{ backend.url_pattern }}</h3>\n\n                                <div class="box-tools pull-right">\n                                    <button type="button" class="btn btn-box-tool" data-widget="collapse">\n                                        <i class="fa fa-minus"></i>\n                                    </button>\n                                    <button type="button"\n                                            class="btn btn-box-tool"\n                                            ng-click="deleteBackendQuery(endpoint_index,backend_index,\'This endpoint and all the information will be deleted. Do you want to proceed?\')">\n                                        <i class="fa fa-trash"></i></button>\n\n                                </div>\n                                \x3c!-- /.box-tools --\x3e\n                            </div>\n                            \x3c!-- /.box-header --\x3e\n                            <div class="box-body">\n                                <h4>Request</h4>\n                                <p>All the data needed to send the request to the servers.</p>\n                                <div class="form-group">\n                                    <div class="col-md-12">\n                                        <label>Service Discovery</label>\n                                        <span class="help-block">Service Discovery options you have configured. <a href="/#/service-discovery">(add more)</a></span>\n                                         <div class="radio" ng-repeat="sd in sd_providers.providers" ng-init="backend.sd=sd_providers.providers[0]">\n                                            <label>\n                                              <input type="radio" ng-model="backend.sd" value="{{ sd }}">\n                                              {{ sd }}\n                                          </label>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class="form-group">\n                                    <div class="col-md-8">\n                                        <label>Hosts</label>\n                                        <select id="host" name="host"\n                                                class="form-control"\n                                                ng-model="backend.host"\n                                                ng-change="backend.disable_host_sanitize=(backend.sd!=\'static\')"\n                                                multiple="multiple">\n                                            <option ng-repeat="host in sd_providers.hosts | filter: backend.sd" value="{{ host.host }}">\n                                                {{ host.host }}\n                                            </option>\n                                        </select>\n\n                                    </div>\n                                    <div class="col-md-4">\n                                        <span class="help-block">Please select one or several backends that will receive\n                                            this request. Use multiple backends to send the same query to all and take\n                                            the fastest response (GET), the rest of methods (PUT,POST,DELETE) will pick\n                                            randomly one backend. between the selected ones.</span>\n                                    </div>\n                                </div>\n                                <div class="form-group">\n                                    <div class="col-md-8">\n                                        <label>Backend endpoint</label>\n                                        <div class="input-group">\n                                            <input type="text"\n                                                   placeholder="/users/{username}"\n                                                   class="form-control"\n                                                   required=""\n                                                   ng-model="backend.url_pattern">\n                                            <div class="input-group-btn">\n                                                <button type="button" class="btn method_{{ endpoint.method }}">\n                                                    {{ endpoint.method }}\n                                                </button>\n                                            </div>\n                                        </div>\n                                        <span class="help-block">The endpoint of the backend server to query. Reuse here\n                                            any <code>{placeholders}</code> defined in the parent endpoint.</span>\n                                    </div>\n\n                                    <div class="col-md-4">\n                                       <label>Rate Limit</label>\n                                       <br/>\n                                       <button class="btn btn-default btn-flat"\n                                            data-toggle="modal"\n                                            data-target="#backend-modal-{{ endpoint_index}}{{ backend_index }}">\n                                            <i class="fa fa-wrench"></i> Rate limit this backend\n                                        </button>\n                                        <span class="help-block">Limit the number of requests this backend will receive regardless of its endpoint configuration</span>\n                                    </div>\n                                </div>\n\n                                <hr/>\n                                <h4>Caching</h4>\n                                <div class="form-group">\n\n                                    <div class="col-md-12">\n                                        <label> Backend caching</label>\n                                        <div class="input-group">\n                                             <input type="checkbox"\n                                                ng-click="toggleCaching($event, endpoint_index, backend_index)"> Store backend response in-memory for the time specified in its <code>Cache-Control</code> header\n\n                                            <span class="help-block">This option increases the load and the memory consumption as KrakenD will keep in memory all the returned data. Use wisely.</span>\n\n                                            <span class="help-block badge label-warning"\n                                                ng-show="backend.extra_config[\'github.com/devopsfaith/krakend-httpcache\']" >\n                                                <i class="fa fa-warning"></i> Warning! Load will be increased\n                                            </span>\n\n                                        </div>\n                                    </div>\n                                </div>\n                                <hr/>\n                                <h4>Authorization</h4>\n                                <middleware data="backend" inherit="service.extra_config[\'github_com/devopsfaith/krakend-oauth2-clientcredentials\']" template="oauth.html" namespace="\'github.com/devopsfaith/krakend-oauth2-clientcredentials\'"></middleware>\n                                <hr/>\n                                <div ng-if="endpoint.output_encoding != \'noop\'">\n                                <h4>Response Parsing</h4>\n                                <div class="form-group">\n                                    <div class="col-md-4">\n                                        <label>Decode as:</label>\n                                        <select class="form-control" ng-model="backend.encoding"\n                                                ng-init="backend.encoding =\'json\'"\n                                                ng-change="setNoOpEncoding(endpoint_index, backend.encoding, \'{{ backend.encoding }}\', backend_index)">\n                                            <option selected value="json">JSON</option>\n                                            <option value="xml">XML</option>\n                                            <option value="rss">RSS</option>\n                                            <option value="string">String</option>\n                                            <option value="noop">No-Op</option>\n                                        </select>\n                                        <span class="help-block">How to decode the response of the backend.</span>\n                                    </div>\n                                    <div class="col-md-8">\n                                        <label>Root object:</label>\n                                        <input type="text" class="form-control" ng-model="backend.target"\n                                               ng-disabled="backend.is_collection == true"\n                                               placeholder="Leave blank to use all the reponse">\n                                        <span class="help-block">Some APIs return all the content encapsulated inside\n                                            a root object (usually named like <code>data</code>, <code>response</code>,\n                                            <code>items</code>). Specifying here a root object will put all its children\n                                            in the first level. When manipulating the data only its children are visible.</span>\n                                    </div>\n                                    <div class="col-md-12">\n                                        <label>Non-object response</label>\n                                        <div class="input-group">\n                                            <input type="checkbox"\n                                                   ng-model="backend.is_collection"\n                                                   ng-change="backend.target = \'\'"> Treat the response as a\n                                            collection, not an object.\n                                            <span class="help-block">KrakenD expects the returned content encapsulated in\n                                            an object (in json inside brackets, e.g: <code>{ "status":"OK" }</code> but if\n                                            the backend returns a collection instead (e.g: <code>[ "a", "b" ]</code>) check\n                                            this option. The collection will be returned inside the <code>collection</code>\n                                            attribute. Use the renaming below to rename it to anything else.</span>\n\n                                        </div>\n                                    </div>\n                                </div>\n                                <hr/>\n\n\n                                <h4>Response manipulation</h4>\n\n                                <p>Transform here the response with a lighter version, include only the attributes that\n                                    your\n                                    application needs.</p>\n                                <div class="form-group">\n                                    <label class="col-md-2 control-label">Filtering mode</label>\n                                    <div class="col-md-10">\n                                        <div class="nav-tabs-custom">\n                                            <ul class="nav nav-tabs">\n                                                <li class="active">\n                                                    <a data-target="#tab_black-{{ endpoint_index }}-{{ backend_index }}"\n                                                       data-toggle="tab"\n                                                       aria-expanded="false">Blacklist (fastest)</a>\n                                                </li>\n                                                <li>\n                                                    <a data-target="#tab_white-{{ endpoint_index }}-{{ backend_index }}"\n                                                       data-toggle="tab"\n                                                       aria-expanded="true">Whitelist</a></li>\n                                            </ul>\n                                            <div class="tab-content">\n\n\n                                                <div class="tab-pane active"\n                                                     id="tab_black-{{ endpoint_index }}-{{ backend_index }}">\n                                                    <p>Attributes that you will NOT pick from the response:</p>\n                                                    <ul class="list-inline">\n                                                        <li ng-repeat="white in backend.blacklist">\n                                                            <a class="badge badge-remove"\n                                                               ng-click="deleteBlacklist(black,backend_index,endpoint_index)"><i\n                                                                    class="fa fa-times"></i>\n                                                                {{ white }}</a>\n                                                        </li>\n                                                    </ul>\n\n                                                    <div class="input-group">\n                                                        <input class="form-control"\n                                                               placeholder="attribute_name"\n                                                               type="url"\n                                                               id="bl{{ endpoint_index }}{{ backend_index }}">\n                                                        <div class="input-group-btn">\n                                                            <button type="button"\n                                                                    class="btn btn-success"\n                                                                    ng-click="addBlacklist(endpoint_index,backend_index)">\n                                                                <i class="fa fa-plus"></i> Add\n                                                                attribute\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div class="tab-pane"\n                                                     id="tab_white-{{ endpoint_index }}-{{ backend_index }}">\n                                                    <p>Attributes that you will pick from the response</p>\n                                                    <ul class="list-inline">\n                                                        <li ng-repeat="white in backend.whitelist">\n                                                            <a class="badge badge-remove"\n                                                               ng-click="deleteWhitelist(white,backend_index,endpoint_index)"><i\n                                                                    class="fa fa-times"></i>\n                                                                {{ white }}</a>\n                                                        </li>\n                                                    </ul>\n\n                                                    <div class="input-group">\n                                                        <input class="form-control"\n                                                               placeholder="attribute_name"\n                                                               type="url"\n                                                               id="wl{{ endpoint_index }}{{ backend_index }}">\n                                                        <div class="input-group-btn">\n                                                            <button type="button"\n                                                                    class="btn btn-success"\n                                                                    ng-click="addWhitelist(endpoint_index,backend_index)">\n                                                                <i class="fa fa-plus"></i> Add\n                                                                attribute\n                                                            </button>\n                                                        </div>\n                                                    </div>\n\n\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                        <span class="help-block">If you want to filter the response, choose between whitelisting or blacklisting attributes. If both are set, whitelisting will be used. If it\'s the same for you, blacklisting performs much better.</span>\n                                    </div>\n                                </div>\n                                <div class="form-group">\n                                    <label class="col-md-2 control-label">Capturing group</label>\n                                    <div class="col-md-10">\n                                        <input ng-model="backend.group"\n                                               type="text"\n                                               class="form-control"\n                                               placeholder="my-group">\n                                        <span class="help-block">\n                                            Fill only if you want to capture all the response and encapsulate inside an attribute name.</span>\n                                    </div>\n                                </div>\n\n                                <div class="form-group">\n                                    <label class="col-md-2 control-label">Renaming</label>\n                                    <div class="col-md-10">\n\n                                        <div class="form-group">\n                                            <div class="col-xs-3">\n                                                <input type="text" class="form-control"\n                                                       placeholder="id_imported_user"\n                                                       id="tr_origin{{ endpoint_index }}{{ backend_index }}">\n                                                <label>Original object</label>\n                                            </div>\n                                            <div class="col-xs-3">\n                                                <input type="text" class="form-control" placeholder="id"\n                                                       id="tr_target{{ endpoint_index }}{{ backend_index }}">\n                                                <label>Renamed object</label>\n\n                                            </div>\n                                            <div class="col-xs-2">\n                                                <button type="button"\n                                                        class="btn btn-success"\n                                                        ng-click="addTransformation(endpoint_index,backend_index)">\n                                                    Apply\n                                                </button>\n                                            </div>\n                                            <div class="col-xs-4">\n                                                <ul class="list-unstyled">\n                                                    <li ng-repeat="(origin,target) in backend.mapping">\n                                                        <a class="badge badge-remove"\n                                                           ng-click="deleteTransformation(origin,endpoint_index, backend_index)"><i\n                                                                class="fa fa-times"></i>\n                                                            {{ origin }} <i class="fa fa-arrow-right"></i> {{ target }}</a>\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                        </div>\n                                        <span class="help-block">You can rename any attributes returned by the backend and use a name more convenient for you.</span>\n                                    </div>\n                                </div>\n                                <hr/>\n\n                                <h4>Advanced - Martian DSL</h4>\n                                <p>Paste here any additional configuration you want to add to <a href="https://github.com/google/martian#modifiers-all-the-way-down">Martian</a>. The input must be a JSON object (ensure to start and end with curly braces <code>{}</code>)</p>\n                                 <div class="form-group">\n                                    <label class="col-md-2 control-label">Martian DSL</label>\n                                    <div class="col-md-10">\n                                        <div class="form-group">\n                                            <div class="col-xs-12">\n                                               <textarea json-formatter class="form-control" ng-model="backend.extra_config[\'github.com/devopsfaith/krakend-martian\']"></textarea>\n                                            </div>\n                                        </div>\n                                        <p ng-show="backend.martian_syntax_validation.length" class="badge label-danger">\n                                            <i class="fa fa-warning"></i> Syntax error - {{backend.martian_syntax_validation}}</p>\n                                        <span class="help-block">Paste here your JSON configuration to be used in the martian modifier. See <a href="https://github.com/devopsfaith/krakend-martian/blob/master/example/krakend.json#L26">an example</a></span>\n                                    </div>\n                                </div>\n                            </div>\n                            </div>\x3c!-- ngif output_encoding != noop --\x3e\n                            \x3c!-- /.box-body --\x3e\n                        </div>\n\n                        \x3c!-- Modal window backend --\x3e\n                        <div id="backend-modal-{{ endpoint_index}}{{ backend_index }}" class="modal fade" tabindex="-1" role="dialog">\n                            <div class="modal-dialog" role="document">\n                                <div class="modal-content">\n                                    <div class="modal-header">\n                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                                            <span aria-hidden="true">&times;</span></button>\n                                        <h4 class="modal-title">Rate limit requests to <code>{{backend.url_pattern}}</code></h4>\n                                    </div>\n                                    <div class="modal-body">\n                                        <p>All the settings below are defined in the <strong>Service configuration</strong>,\n                                            setting one or several values here means overriding the settings for this specific backend\n                                            only.</p>\n                                            <div class="form-group">\n                                                <div class="col-md-12" ng-class="isInteger(backend.extra_config[\'github.com/devopsfaith/krakend-ratelimit/juju/proxy\'].maxRate) ? \'\' : \'has-error\'">\n                                                    <label>Max rate limit</label>\n                                                    <div class="input-group">\n                                                        <input class="form-control"\n                                                               type="text"\n                                                               ng-model="backend.extra_config[\'github.com/devopsfaith/krakend-ratelimit/juju/proxy\'].maxRate"\n                                                               ng-change="backend.extra_config[\'github.com/devopsfaith/krakend-ratelimit/juju/proxy\'].capacity=backend.extra_config[\'github.com/devopsfaith/krakend-ratelimit/juju/proxy\'].maxRate">\n                                                        <div class="input-group-addon">reqs/sec</div>\n                                                    </div>\n                                                    <div class="help-block">\n                                                        <p ng-hide="isInteger(backend.extra_config[\'github.com/devopsfaith/krakend-ratelimit/juju/proxy\'].maxRate)" class="badge label-danger"><i\n                                                                class="fa fa-warning"></i> Invalid format</p>\n                                                        <p>Maximum requests per second you want to accept in this backend.</p>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class="form-group" ng-class="isInteger(backend.extra_config[\'github.com/devopsfaith/krakend-ratelimit/juju/proxy\'].capacity) ? \'\' : \'has-error\'">\n                                                <div class="col-md-12">\n                                                    <label class="control-label">Capacity (Burst size)</label>\n                                                    <div class="input-group">\n                                                        <input class="form-control"\n                                                               ng-model="backend.extra_config[\'github.com/devopsfaith/krakend-ratelimit/juju/proxy\'].capacity"\n                                                               id="backend.extra_config[\'github.com/devopsfaith/krakend-ratelimit/juju/proxy\'].capacity"\n                                                               name="backend.extra_config[\'github.com/devopsfaith/krakend-ratelimit/juju/proxy\'].capacity"\n                                                               type="text">\n                                                        <div class="input-group-addon">reqs/sec</div>\n                                                    </div>\n                                                    <div class="help-block">\n                                                        <p ng-hide="isInteger(backend.extra_config[\'github.com/devopsfaith/krakend-ratelimit/juju/proxy\'].capacity)" class="badge label-danger"><i\n                                                                class="fa fa-warning"></i> Invalid format</p>\n                                                        <p>Recommended value <code>capacity=maxRate</code>. A <a href="https://en.wikipedia.org/wiki/Token_bucket">token bucket</a> algorithm is used with a bucket capacity == tokens added per second. KrakenD is able to allow bursting on the request rates.</p>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        \x3c!-- /Modal backend --\x3e\n                    </div>\n\n\n                </div>\n                <button class="btn btn-primary"\n                    ng-click="addDefaultStaticResponse(endpoint_index)"\n                    ng-if="! endpoint.extra_config[\'github.com/devopsfaith/krakend/proxy\'].static  &&   !(endpoint.output_encoding == \'noop\' && endpoint.backend.length > 0)">\n                    <span class="glyphicon glyphicon glyphicon-plus" aria-hidden="true"></span>\n                    Add static response\n                </button>\n                <button class="btn btn-primary"\n                        ng-click="addBackendQuery(endpoint_index)"\n                        ng-if="! endpoint.backend || endpoint.backend.length < 1 || ( endpoint.method ==\'GET\' && !(endpoint.output_encoding == \'noop\' && endpoint.backend.length > 0))">\n                    <span class="glyphicon glyphicon glyphicon-plus" aria-hidden="true"></span>\n                    Add backend query\n                </button>\n            </fieldset>\n        </form>\n    </div>\n    \x3c!-- /.box-body --\x3e\n\n\n    \x3c!-- Modal Window for rate limiting--\x3e\n    <div id="throttling-modal-{{ endpoint_index }}" class="modal fade" tabindex="-1" role="dialog">\n        <div class="modal-dialog" role="document">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">&times;</span></button>\n                    <h4 class="modal-title">Rate limiting (throttling)</code></h4>\n                </div>\n                <div class="modal-body">\n                    <middleware data=endpoint namespace="\'github.com/devopsfaith/krakend-ratelimit/juju/router\'"\n                        template="ratelimit_router.html">\n                    </middleware>\n                </div>\n            </div>\n        </div>\n    </div>\n    \x3c!-- Modal Window for security in this endpoint--\x3e\n    <div id="security-modal-{{ endpoint_index }}" class="modal fade"\n         tabindex="-1"\n         role="dialog">\n        <div class="modal-dialog" role="document">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">&times;</span></button>\n                    <h4 class="modal-title">Override security headers for <code>{{ endpoint.endpoint }}</code></h4>\n                </div>\n                <div class="modal-body">\n\n                        <middleware\n                            template="httpsecure.html"\n                            namespace="\'github.com/devopsfaith/krakend-httpsecure\'"\n                            ng-if="hasMiddleware(\'github_com/devopsfaith/krakend-httpsecure\')"\n                            data="endpoint"\n                            inherit="service.extra_config[\'github_com/devopsfaith/krakend-httpsecure\']">\n                        </middlware>\n                </div>\n            </div>\n        </div>\n    </div>\n    \x3c!-- Modal Window for advanced Pipe composition--\x3e\n    <div id="advanced-pipe-{{ endpoint_index }}" class="modal fade"\n         tabindex="-1"\n         role="dialog">\n        <div class="modal-dialog" role="document">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">&times;</span></button>\n                    <h4 class="modal-title">Advanced pipe composition for <code>{{ endpoint.endpoint }}</code></h4>\n                </div>\n                <div class="modal-body">\n                    <p>If you have a custom combiner configure it here to modify the proxy pipe with your custom configuration</p>\n                    <div class="row form-group">\n\n                            <div class="col-md-12">\n                                <label>Custom combiner</label>\n                                <input class="form-control"\n                                       type="text"\n                                       ng-model="endpoint.extra_config[\'github.com/devopsfaith/krakend/proxy\'].combiner"\n                                       placeholder="combiner_name">\n                                <div class="help-block">\n                                   <p>Specify the combiner for merging the backend responses.</p>\n                                </div>\n                            </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \x3c!-- Modal Window for endpoint--\x3e\n    <div id="endpoint-modal-{{ endpoint_index }}" class="modal fade"\n         tabindex="-1"\n         role="dialog">\n        <div class="modal-dialog" role="document">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                        <span aria-hidden="true">&times;</span></button>\n                    <h4 class="modal-title">Override global configuration for <code>{{ endpoint.endpoint }}</code></h4>\n                </div>\n                <div class="modal-body">\n                    <p>All the settings below are defined in the <strong>Service configuration</strong>,\n                        setting one or several values here means overriding the settings for this specific endpoint\n                        only.</p>\n\n                    <p ng-include src="\'/src/app/forms/time_units.html\'"></p>\n\n                    <div class="row">\n                        <div class="form-group">\n\n                            <div class="col-md-4" ng-class="isValidTimeUnit(endpoint.timeout) ? \'\' : \'has-error\'">\n                                <label>Timeout</label>\n                                <input class="form-control"\n                                       type="text"\n                                       ng-model="endpoint.timeout">\n                                <div class="help-block">\n                                    <p ng-hide="isValidTimeUnit(endpoint.timeout)" class="badge label-danger"><i\n                                            class="fa fa-warning"></i> Invalid format</p>\n                                    <p>Maximum time you\'ll wait for the slowest response. Usually in milliseconds\n                                        (ms)</p>\n                                </div>\n                            </div>\n\n                            <div class="col-md-6" ng-class="isValidTimeUnit(endpoint.cache_ttl) ? \'\' : \'has-error\'">\n                                <label>Cache TTL</label>\n                                <input class="form-control" type="text" ng-model="endpoint.cache_ttl">\n                                <div class="help-block">\n                                    <p ng-hide="isValidTimeUnit(endpoint.cache_ttl)" class="badge label-danger"><i\n                                            class="fa fa-warning"></i> Invalid format</p>\n                                    <p>For how long a proxy can cache a request to this endpoint.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<button class="btn btn-lg btn-success" ng-click="addEndpoint()">Add endpoint</button>\n'),e.put("/src/app/forms/logging.html",'<div class="col-md-6">\n  <middleware data="service" template="gologging.html" namespace="\'github_com/devopsfaith/krakend-gologging\'"></middleware>\n  <middleware data="service" template="metrics.html" namespace="\'github_com/devopsfaith/krakend-metrics\'"></middleware>\n</div>\n<div class="col-md-6">\n  <opencensus data="service"></opencensus>\n</div>'),e.put("/src/app/forms/oauth.html",'<div class="box box-primary">\n    <div class="box-header with-border">\n        <h3 class="box-title">OAuth settings</h3>\n        <div class="box-tools pull-right">\n            <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>\n        </div>\n    </div>\n    \x3c!-- /.box-header --\x3e\n    <div class="box-body">\n        <p>The OAuth settings are used per backend as every query will require different scopes/settings. Nevertheless you might want to set some initial settings that will be copied to the specific backend when you check OAuth is required.</p>\n\n        <middleware data="service" template="oauth.html" namespace="\'github_com/devopsfaith/krakend-oauth2-clientcredentials\'"></middleware>\n    </div>\x3c!-- ./box-body --\x3e\n\n</div>\n'),e.put("/src/app/forms/security.html",'\n\n<div class="box box-primary">\n    <div class="box-header with-border">\n        <h3 class="box-title">Security headers</h3>\n\n        <div class="box-tools pull-right">\n            <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>\n        </div>\n    </div>\n    \x3c!-- /.box-header --\x3e\n    <div class="box-body">\n       <p>The following options enhance the security in your API and are optional. All values set here will be copied\n       to new created endpoints. These can override specific configurations later.</p>\n\n       <middleware data="service" template="httpsecure.html" namespace="\'github_com/devopsfaith/krakend-httpsecure\'"></middleware>\n\n    </div>\n</div>\n'),e.put("/src/app/forms/service_configuration.html",'<div class="row">\n  <div class="col-md-6">\n    <div class="box">\n      <div class="box-header with-border">\n        <h3 class="box-title">Service Name</h3>\n      </div>\n      <div class="box-body">\n        <div class="form-group form-group-lg">\n          <input class="form-control" id="service.name" name="service.name"\n          placeholder="My Service" ng-model="service.name" type="text">\n          <span class="help-block">\n            A friendly name, title, date, version or any other short description that will help you recognize the JSON file when opened.\n          </span>\n        </div>\n      </div>\n    </div>\n    <div ng-include src="\'/src/app/forms/backends.html\'"></div>\n    <middleware\n        template="cors.html"\n        namespace="\'github_com/devopsfaith/krakend-cors\'"\n        data="service">\n    </middleware>\n  </div>\n  <div class="col-md-6">\n    <div ng-include src="\'/src/app/service/options.html\'"></div>\n    <div ng-include src="\'/src/app/service/http_server_settings.html\'"></div>\n    <div ng-include src="\'/src/app/service/timeouts.html\'"></div>\n  </div>\n</div>\n</div>\n<div class="row">\n<div class="col-md-12">\n  <div ng-include src="\'/src/app/service/http_client_settings.html\'"></div>\n</div>'),e.put("/src/app/forms/service_discovery.html",'<div class="col-md-6">\n  <div ng-include src="\'/src/app/forms/backends.html\'"></div>\n\n  <middleware data="service" template="etcd.html" namespace="\'github_com/devopsfaith/krakend-etcd\'"></middleware>\n\n</div>\n<div class="col-md-6">\n\n</div>\n\n\n'),e.put("/src/app/forms/sidebar.html",'\x3c!-- Sidebar Menu --\x3e\n<ul class="sidebar-menu">\n    <li class="header">Navigation</li>\n    <li class="active">\n        <a href="/#/"><i class="fa fa-dashboard"></i> <span>Dashboard</span></a>\n    </li>\n    <li>\n        <a href="/#/service"><i class="fa fa-wrench"></i> <span>Service configuration</span>\n            <span ng-if="sd_providers.hosts.length === 0 || !sd_providers.hosts" class="pull-right-container" data-toggle="tooltip"\n                  data-original-title="No backends configured yet!">\n                    <i class="fa fa-warning pull-right icon-warning"></i>\n            </span>\n        </a>\n    </li>\n    <li>\n        <a href="/#/service-discovery"><i class="fa fa-connectdevelop"></i> <span>Service Discovery and hosts</span></a>\n    </li>\n    <li class="treeview"><a href="/#/endpoints"><i class="fa fa-gear"></i> <span>Endpoints</span>\n        <span class="pull-right-container">\n                    <i class="fa fa-angle-left pull-right"></i>\n                </span>\n    </a>\n        <ul class="treeview-menu menu-open">\n            <li ng-repeat="endpoint in service.endpoints">\n                <a href="/#/endpoints"><i class="fa fa-circle-o }}"></i> {{ endpoint.endpoint }}\n                    <span class="pull-right-container">\n                            <i class="fa fa-angle-left pull-right"></i>\n                        </span>\n                </a>\n                <ul class="treeview-menu menu-open">\n                    <li ng-repeat="backend in endpoint.backend">\n                        <a><i class="fa fa-arrow-right"></i> {{ backend.url_pattern }}</a>\n                    </li>\n                </ul>\n\n            </li>\n\n        </ul>\n\n\n    </li>\n    <li class="treeview">\n        <a><i class="fa fa-shield"></i> <span>Security options</span>\n            <span class="pull-right-container">\n              <i class="fa fa-angle-left pull-right"></i>\n            </span>\n        </a>\n        <ul class="treeview-menu">\n            <li><a href="/#/oauth"><i class="fa fa-user-secret"></i>OAuth</a></li>\n            <li><a href="/#/security"><i class="fa fa-key"></i>Security headers</a></li>\n        </ul>\n    </li>\n    <li>\n        <a href="/#/logging"><i class="fa fa-area-chart"></i> <span>Logging and metrics</span></a>\n    </li>\n    <li><a href="http://www.krakend.io/docs/overview/introduction"><i class="fa fa-book"></i> <span>Documentation</span></a>\n    </li>\n</ul>\n\n<hr/>\n\n<ul class="sidebar-menu">\n    <li>\n        <a  ng-click="save()"\n            data-toggle="tooltip"\n            data-original-title="Save configuration!"><i class="fa fa-save"></i> <span>Save</span>\n        </a>\n    </li>\n</ul>\n'),e.put("/src/app/forms/time_units.html",'<strong>Valid time units are:</strong>\n<code><abbr title="Nanoseconds">ns</abbr></code>,\n<code><abbr title="Microseconds">us</abbr></code>, (or <code>µs</code>),\n<code><abbr title="Milliseconds">ms</abbr></code>,\n<code><abbr title="Seconds">s</abbr></code>,\n<code><abbr title="Minutes">m</abbr></code>,\n<code><abbr title="Hours">h</abbr></code>\n'),e.put("/src/app/metrics/opencensus.html",'<div class="box box-primary">\n  <div class="box-header with-border">\n    <h3 class="box-title"><input type="checkbox"\n      ng-model="opencensus_enabled"\n      ng-checked="isMiddlewareEnabled()"\n      ng-click="toggleOpencensusMiddleware(opencensus_enabled)"> Opencensus <small>(Zipkin, InfluxDB, Prometheus...)</small></h3>\n    </div>\n    <div class="box-body" ng-if="isMiddlewareEnabled()">\n      <p>The Opencensus <em>middleware</em> provides several integrations to export tracing and metrics to different backends. Select all the metric integrations you want to enable and configure below:</p>\n      <div class="form-group">\n        <div class="checkbox">\n          <label>\n            <input type="checkbox"\n            ng-model="exporters.logger"\n            ng-checked="backendIsEnabled(\'logger\')"\n            ng-click="toggleOpencensusBackend(exporters.logger,\'logger\')">\n            <strong>Logger</strong> - Will use your Logger settings to expose the metrics\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox"\n            ng-model="exporters.zipkin"\n            ng-checked="backendIsEnabled(\'zipkin\')"\n            ng-click="toggleOpencensusBackend(exporters.zipkin,\'zipkin\')">\n            <strong>Zipkin</strong> - Distributed tracing system\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox"\n            ng-model="exporters.jaeger"\n            ng-checked="backendIsEnabled(\'jaeger\')"\n            ng-click="toggleOpencensusBackend(exporters.jaeger,\'jaeger\')">\n            <strong>Jaeger</strong> - Distributed tracing system\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox"\n            ng-model="exporters.influxdb"\n            ng-checked="backendIsEnabled(\'influxdb\')"\n            ng-click="toggleOpencensusBackend(exporters.influxdb,\'influxdb\')">\n            <strong>InfluxDB</strong> - Time series database\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox"\n            ng-model="exporters.prometheus"\n            ng-checked="backendIsEnabled(\'prometheus\')"\n            ng-click="toggleOpencensusBackend(exporters.prometheus,\'prometheus\')">\n            <strong>Prometheus</strong> - Monitoring and alerting toolkit\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox"\n            ng-model="exporters.xray"\n            ng-checked="backendIsEnabled(\'xray\')"\n            ng-click="toggleOpencensusBackend(exporters.xray,\'xray\')">\n            <strong>AWS X-Ray</strong> - Analyze and debug production, distributed applications\n          </label>\n        </div>\n      </div>\n      <h4>Global settings for all metrics</h4>\n      <div class="row">\n        <div class="col-md-6">\n          <label class="control-label">Sample rate</label>\n          <div class="input-group">\n            <input type="text"\n            class="form-control"\n            ng-model="data.extra_config[config_namespace].sample_rate"\n            placeholder="100">\n            <div class="input-group-addon">%</div>\n          </div>\n          <div class="help-block">\n            Percentage of requests you want to sample (0-100).\n          </div>\n        </div>\n        <div class="col-md-6">\n          <label class="control-label">Reporting period</label>\n          <div class="input-group">\n            <input type="text"\n            class="form-control"\n            ng-model="data.extra_config[config_namespace].reporting_period"\n            placeholder="1">\n            <div class="input-group-addon">seconds</div>\n          </div>\n          <div class="help-block">\n            Time between sent reports to the backend\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="box box-secondary" ng-if="data.extra_config[config_namespace].exporters.logger">\n    <div class="box-header with-border">\n      <h3 class="box-title">Logger</h3>\n    </div>\n    <div class="box-body">\n      <p>Sending metrics to the logger do not require any additional configuration. Metrics will be displayed as per the Logging configuration</p>\n    </div>\n  </div>\n  <div class="box box-secondary" ng-if="data.extra_config[config_namespace].exporters.influxdb">\n    <div class="box-header with-border">\n      <h3 class="box-title">InfluxDB configuration</h3>\n    </div>\n    <div class="box-body">\n      <div class="form-group">\n        <label class="control-label">Address</label>\n        <input type="text"\n        class="form-control"\n        ng-model="data.extra_config[config_namespace].exporters.influxdb.address"\n        placeholder="e.g: http://192.168.99.100:8086">\n      </div>\n      <div class="row">\n        <div class="col-md-8">\n          <label class="control-label">Database</label>\n          <input type="text"\n          class="form-control"\n          ng-model="data.extra_config[config_namespace].exporters.influxdb.db"\n          placeholder="e.g: krakend">\n        </div>\n        <div class="col-md-4" ng-class="isValidTimeUnit(data.extra_config[config_namespace].exporters.influxdb.timeout) ? \'\' : \'has-error\'">\n          <label class="control-label">Write Timeout</label>\n          <input type="text"\n          class="form-control"\n          ng-model="data.extra_config[config_namespace].exporters.influxdb.timeout"\n          ng-class="isValidTimeUnit(data.extra_config[config_namespace].exporters.influxdb.timeout) ? \'\' : \'has-error\'">\n          <div class="help-block">\n            <p ng-hide="isValidTimeUnit(data.extra_config[config_namespace].exporters.influxdb.timeout)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="box box-secondary" ng-if="data.extra_config[config_namespace].exporters.zipkin">\n    <div class="box-header with-border">\n      <h3 class="box-title">Zipkin configuration</h3>\n    </div>\n    <div class="box-body">\n      <div class="row">\n        <div class="col-md-6">\n          <label class="control-label">Collector URL</label>\n          <input type="text"\n          class="form-control"\n          ng-model="data.extra_config[config_namespace].exporters.zipkin.collector_url"\n          placeholder="e.g: http://192.168.99.100:9411/api/v2/spans">\n        </div>\n        <div class="col-md-6">\n          <label class="control-label">Service Name</label>\n          <input type="text"\n          class="form-control"\n          ng-model="data.extra_config[config_namespace].exporters.zipkin.service_name"\n          placeholder="e.g: krakend">\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="box box-secondary" ng-if="data.extra_config[config_namespace].exporters.jaeger">\n    <div class="box-header with-border">\n      <h3 class="box-title">Jaeger configuration</h3>\n    </div>\n    <div class="box-body">\n      <div class="row">\n        <div class="col-md-6">\n          <label class="control-label">Endpoint</label>\n          <input type="text"\n          class="form-control"\n          ng-model="data.extra_config[config_namespace].exporters.jaeger.endpoint"\n          placeholder="e.g: http://192.168.99.100:9411/api/v2/spans">\n        </div>\n        <div class="col-md-6">\n          <label class="control-label">Service Name</label>\n          <input type="text"\n          class="form-control"\n          ng-model="data.extra_config[config_namespace].exporters.jaeger.service_name"\n          placeholder="e.g: krakend">\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="box box-secondary" ng-if="data.extra_config[config_namespace].exporters.prometheus">\n    <div class="box-header with-border">\n      <h3 class="box-title">Prometheus configuration</h3>\n    </div>\n    <div class="box-body">\n      <div class="form-group">\n        <label class="control-label">Port</label>\n        <input type="text"\n        class="form-control"\n        ng-model="data.extra_config[config_namespace].exporters.prometheus.port"\n        placeholder="e.g:9091">\n      </div>\n    </div>\n  </div>\n  <div class="box box-secondary" ng-if="data.extra_config[config_namespace].exporters.xray">\n    <div class="box-header with-border">\n      <h3 class="box-title">AWS X-Ray configuration</h3>\n    </div>\n    <div class="box-body">\n        <div class="form-group">\n            <div class="row">\n              <div class="col-md-6">\n                <label class="control-label">Region</label>\n                <input type="text"\n                class="form-control"\n                ng-model="data.extra_config[config_namespace].exporters.xray.region"\n                placeholder="e.g: eu-west-1">\n              </div>\n              <div class="col-md-6">\n                <label class="control-label">Your service version</label>\n                <input type="text"\n                class="form-control"\n                ng-model="data.extra_config[config_namespace].exporters.xray.version"\n                placeholder="e.g: 1.2.3">\n              </div>\n            </div>\n        </div>\n      <div class="form-group">\n        <div class="checkbox">\n          <label>\n            <input type="checkbox"\n            ng-model="data.extra_config[config_namespace].exporters.xray.use_env"\n            ng-click="toggleXRayAuth()">\n            <strong>Use credentials from ENV</strong>\n          </label>\n        </div>\n        </div>\n        <div class="form-group">\n          <div class="row" ng-if="!data.extra_config[config_namespace].exporters.xray.use_env">\n            <div class="col-md-6">\n              <label class="control-label">AWS Access Key</label>\n              <input type="text"\n              class="form-control"\n              ng-model="data.extra_config[config_namespace].exporters.xray.access_key_id"\n              placeholder="e.g: eu-west-1">\n            </div>\n            <div class="col-md-6">\n              <label class="control-label">AWS Secret Key</label>\n              <input type="text"\n              class="form-control"\n              ng-model="data.extra_config[config_namespace].exporters.xray.secret_access_key"\n              placeholder="e.g: 1.2.3">\n            </div>\n          </div>\n        </div>\n    </div>\n  </div>'),e.put("/src/app/middlewares/cors.html",'<div class="box box-info">\n    <div class="box-header with-border">\n        <h3 class="box-title">\n            <input type="checkbox" ng-checked="isMiddlewareEnabled()" ng-click="toggleMiddleware()"> Cross-origin resource\n            sharing (CORS)\n        </h3>\n    </div>\n    <div class="box-body" ng-if="isMiddlewareEnabled()">\n        <div class="row">\n            <div class="col-md-12">\n                <div class="form-group">\n                    <label class="control-label">Allowed methods</label>\n                    <span class="help-block">Select which methods will be allowed</span>\n                    <select class="form-control" ng-model="data.extra_config[config_namespace].allow_methods" multiple>\n                        <optgroup label="Simple requests">\n                            <option>GET</option>\n                            <option>HEAD</option>\n                            <option>POST</option>\n                        </optgroup>\n                        <optgroup label="Preflighted requests">\n                            <option>PUT</option>\n                            <option>DELETE</option>\n                            <option>CONNECT</option>\n                            <option>OPTIONS</option>\n                            <option>TRACE</option>\n                            <option>PATCH</option>\n                        </optgroup>\n                    </select>\n                    <ul class="list-inline">\n                        <li ng-if="data.extra_config[config_namespace].allow_methods.length">Your choice:</li>\n                        <li ng-repeat="(index,val) in data.extra_config[config_namespace].allow_methods">\n                            <a class="badge badge-remove" ng-click="deleteIndexFromList(index,\'allow_methods\')"><i class="fa fa-times"></i>\n                                {{ val }}</a>\n                        </li>\n                    </ul>\n\n                </div>\n            </div>\n            <div class="col-md-12">\n                <div class="form-group">\n                    <label class="control-label">Allowed origins</label>\n                    <div class="input-group">\n                        <input class="form-control" placeholder="https://example.com" type="text" required="" ng-model="input_allow_origins">\n                        <div class="input-group-btn">\n                            <button type="button" class="btn btn-success" ng-click="addTermToList(input_allow_origins,\'allow_origins\')">\n                                <i class="fa fa-plus"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <span class="help-block">Add those origins you would like to accept. Or leave empty for any origin.</span>\n                    <ul class="list-inline">\n                        <li ng-repeat="(index,val) in data.extra_config[config_namespace].allow_origins">\n                            <a class="badge badge-remove" ng-click="deleteIndexFromList(index,\'allow_origins\')"><i class="fa fa-times"></i>\n                                {{ val }}</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-md-6">\n                <div class="form-group">\n                    <label class="control-label">Allowed headers</label>\n                    <div class="input-group">\n                        <input class="form-control" placeholder="e.g: Accept-Language" type="text" required="" ng-model="input_allow_headers">\n                        <div class="input-group-btn">\n                            <button type="button" class="btn btn-success" ng-click="addTermToList(input_allow_headers,\'allow_headers\')">\n                                <i class="fa fa-plus"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <span class="help-block">Only the headers added here will be allowed</span>\n                    <ul class="list-inline">\n                        <li ng-repeat="(index,val) in data.extra_config[config_namespace].allow_headers">\n                            <a class="badge badge-remove" ng-click="deleteIndexFromList(index,\'allow_headers\')"><i class="fa fa-times"></i>\n                                {{ val }}</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class="col-md-6">\n                <div class="form-group">\n                    <label class="control-label">Expose headers</label>\n                    <div class="input-group">\n                        <input class="form-control" placeholder="e.g: Accept-Language" type="text" required="" ng-model="input_expose_headers">\n                        <div class="input-group-btn">\n                            <button type="button" class="btn btn-success" ng-click="addTermToList(input_expose_headers,\'expose_headers\')">\n                                <i class="fa fa-plus"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <span class="help-block">Headers that are safe to expose to the API of a CORS API specification</span>\n                    <ul class="list-inline">\n                        <li ng-repeat="(index,val) in data.extra_config[config_namespace].expose_headers">\n                            <a class="badge badge-remove" ng-click="deleteIndexFromList(index,\'expose_headers\')"><i class="fa fa-times"></i>\n                                {{ val }}</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-md-6">\n                <div class="form-group">\n                    <div class="checkbox">\n                        <label>\n                            <input type="checkbox" ng-model="data.extra_config[config_namespace].allow_credentials">\n                            <strong>Allow credentials</strong>\n                        </label>\n                        <span class="help-block">When requests can include user credentials like cookies, HTTP authentication\n                            or client side SSL certificates</span>\n                    </div>\n                </div>\n            </div>\n            <div class="col-md-6">\n                <div class="form-group" ng-class="validator.isValidTimeUnit(data.extra_config[config_namespace].max_age) ? \'\' : \'has-error\'">\n                    <label class="control-label">Max age</label>\n                    <input type="text" class="form-control" ng-model="data.extra_config[config_namespace].max_age" placeholder="300s">\n                    <div class="help-block">\n                        <p ng-hide="validator.isValidTimeUnit(data.extra_config[config_namespace].max_age)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n                        For how long the response can be cached\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),e.put("/src/app/middlewares/etcd.html",'<div class="box box-primary">\n  <div class="box-header with-border">\n    <h3 class="box-title">\n      <input\n        type="checkbox"\n        ng-checked="isMiddlewareEnabled()"\n        ng-click="toggleMiddleware()">\n        Etcd middleware <small>(<a href="https://github.com/devopsfaith/krakend-etcd">source code</a>)</small></h3>\n    <div class="box-tools pull-right" ng-if="isMiddlewareEnabled()">\n      <button type="button" class="btn btn-box-tool" ng-click="toggleMiddleware()"><i class="fa fa-trash"></i></button>\n    </div>\n  </div>\n  <div class="box-body"  ng-if="isMiddlewareEnabled()">\n    <div class="form-group" ng-class="validator.isEmpty(data.extra_config[config_namespace].machines) ? \'has-error\' : \'\'">\n      <label class="control-label" for="data.extra_config[config_namespace].machines">Available etcd machines</label>\n      <div class="input-group" ng-class="validator.hasHTTP(etcd_machine) || validator.isEmpty(etcd_machine) ? \'\' : \'has-error\'">\n        <input class="form-control"\n        placeholder="http://x.x.x.x:4001"\n        type="text"\n        ng-model="etcd_machine"\n        name="data.extra_config[config_namespace].machines">\n        <div class="input-group-btn">\n          <button type="button" class="btn btn-success" ng-click="validator.hasHTTP(etcd_machine) ? addTermToList(etcd_machine,\'machines\') : false"><i\n            class="fa fa-plus"></i> Add Etcd machine\n          </button>\n        </div>\n      </div>\n      <div class="help-block">\n        <p>Etcd servers you want KrakenD to make use of for host resolution</p>\n        <code>http(s)://hostname[:port]</code>\n      </div>\n      <div class="help-block">\n       <ul class="list-unstyled">\n        <li ng-repeat="(index,host) in data.extra_config[config_namespace].machines">\n          <a class="badge badge-remove" ng-click="deleteIndexFromList(index,\'machines\')"\n          title="Click to delete server"><i class="fa fa-times"></i> {{ host }}</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n  <div class="form-group" ng-class="validator.isValidTimeUnit(data.extra_config[config_namespace].dial_timeout) ? \'\' : \'has-error\'">\n    <label class="control-label" for="data.extra_config[config_namespace].dial_timeout">Dial Timeout</label>\n    <input class="form-control"\n    id="data.extra_config[config_namespace].dial_timeout"\n    ng-model="data.extra_config[config_namespace].dial_timeout"\n    name="data.extra_config[config_namespace].dial_timeout"\n    placeholder="5s"\n    type="text" />\n    <div class="help-block">\n      <p ng-hide="validator.isValidTimeUnit(data.extra_config[config_namespace].dial_timeout)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n      <p>Dial timeout includes name resolution.</p>\n    </div>\n  </div>\n  <div class="form-group" ng-class="validator.isValidTimeUnit(data.extra_config[config_namespace].dial_keepalive) ? \'\' : \'has-error\'">\n    <label class="control-label" for="data.extra_config[config_namespace].dial_keepalive">Dial Keep Alive</label>\n    <input class="form-control"\n    id="data.extra_config[config_namespace].dial_keepalive"\n    ng-model="data.extra_config[config_namespace].dial_keepalive"\n    name="data.extra_config[config_namespace].dial_keepalive"\n    placeholder="30s"\n    type="text" />\n    <div class="help-block">\n      <p ng-hide="validator.isValidTimeUnit(data.extra_config[config_namespace].dial_keepalive)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n\n      <p>KeepAlive specifies the keep-alive period for an active network connection. If zero, keep-alives are not enabled.</p>\n    </div>\n  </div>\n  <div class="form-group" ng-class="validator.isValidTimeUnit(data.extra_config[config_namespace].header_timeout) ? \'\' : \'has-error\'">\n    <label class="control-label" for="data.extra_config[config_namespace].header_timeout">Timeout per request</label>\n    <input class="form-control"\n    id="data.extra_config[config_namespace].header_timeout"\n    ng-model="data.extra_config[config_namespace].header_timeout"\n    name="data.extra_config[config_namespace].header_timeout"\n    placeholder="1s"\n    type="text" />\n    <div class="help-block">\n      <p ng-hide="validator.isValidTimeUnit(data.extra_config[config_namespace].header_timeout)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n      <p>Header sent to determine the maximum timeout per request</p>\n    </div>\n  </div>\n\n\n  <div class="form-group">\n    <label class="control-label" for="data.extra_config[config_namespace].cert">Certificate</label>\n    <input class="form-control"\n    id="data.extra_config[config_namespace].cert"\n    ng-model="data.extra_config[config_namespace].cert"\n    name="data.extra_config[config_namespace].cert"\n    placeholder="/path/to/file"\n    type="text" />\n    <div class="help-block">\n      <p>Absolute path to the certificate</p>\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label class="control-label" for="data.extra_config[config_namespace].key">Private key</label>\n    <input class="form-control"\n    id="data.extra_config[config_namespace].key"\n    ng-model="data.extra_config[config_namespace].key"\n    name="data.extra_config[config_namespace].key"\n    placeholder="/path/to/file"\n    type="text" />\n    <div class="help-block">\n      <p>Absolute path to the private key</p>\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label class="control-label" for="data.extra_config[config_namespace].cacert">CA Cert</label>\n    <input class="form-control"\n    id="data.extra_config[config_namespace].cacert"\n    ng-model="data.extra_config[config_namespace].cacert"\n    name="data.extra_config[config_namespace].cacert"\n    placeholder="/path/to/file"\n    type="text" />\n    <div class="help-block">\n      <p>Absolute path to the CA Cert</p>\n    </div>\n  </div>\n</div>\n</div>'),e.put("/src/app/middlewares/gologging.html",'<div class="box box-primary">\n  <div class="box-header with-border">\n    <h3 class="box-title"><input type="checkbox"\n          ng-checked="isMiddlewareEnabled()"\n          ng-click="toggleMiddleware()"> Logging</h3>\n  </div>\n\n  <div class="box-body"  ng-if="isMiddlewareEnabled()">\n    <p>Choose what is the reporting level you would like to see and where to log.</p>\n    <div class="row">\n      <div class="col-md-6">\n        <label class="control-label">Level</label>\n        <select class="form-control"\n        ng-model="data.extra_config[config_namespace].level"\n        id="data.extra_config[config_namespace].level"\n        name="data.extra_config[config_namespace].level"\n        ng-init="data.extra_config[config_namespace].level=\'WARNING\'">\n        <option value="DEBUG">DEBUG</option>\n        <option value="INFO">INFO</option>\n        <option value="WARNING">WARNING</option>\n        <option value="ERROR">ERROR</option>\n        <option value="CRITICAL">CRITICAL</option>\n      </select>\n      <span class="help-block">The reporting level, from more to less verbosity</span>\n    </div>\n    <div class="col-md-6">\n      <label class="control-label">Logging prefix</label>\n      <input class="form-control"\n      ng-model="data.extra_config[config_namespace].prefix"\n      id="data.extra_config[config_namespace].prefix"\n      name="data.extra_config[config_namespace].prefix"\n      type="text"\n      ng-init="data.extra_config[config_namespace].prefix=\'[KRAKEND]\'">\n      <span class="help-block">Prepend a string before the the log lines</span>\n    </div>\n  </div>\n  <h4>Send logs to...</h4>\n  <div class="form-group">\n    <div class="checkbox">\n      <label>\n        <input\n        type="checkbox"\n        value="dns"\n        ng-model="data.extra_config[config_namespace].syslog"\n        ng-init="data.extra_config[config_namespace].syslog=false">\n        <strong>Syslog</strong> - Send logs to syslog\n      </label>\n    </div>\n    <div class="checkbox">\n      <label>\n        <input\n        type="checkbox"\n        value="etcd"\n        ng-model="data.extra_config[config_namespace].stdout"\n        ng-init="data.extra_config[config_namespace].stdout=true">\n        <strong>Stdout</strong> - Send logs to standard out\n      </label>\n    </div>\n  </div>\n</div>'),e.put("/src/app/middlewares/httpsecure.html",'<div class="form-group">\n    <div class="checkbox">\n        <label>\n            <input type="checkbox"\n                ng-checked="isMiddlewareEnabled()"\n                ng-click="toggleMiddleware()">\n            <strong>Enable HTTP secure middleware</strong> (<a href="https://github.com/devopsfaith/krakend-httpsecure" title="View middleware source code">source code</a>)\n        </label>\n        <span class="help-block">Add AllowedHosts, SSL, HSTS options and other security policies.</span>\n    </div>\n</div>\n<div ng-if="isMiddlewareEnabled()">\n    <div class="form-group">\n        <h4>Allowed hosts</h4>\n        <div class="input-group">\n            <ul class="list-unstyled">\n                <li ng-repeat="(index,host) in data.extra_config[config_namespace].allowed_hosts">\n                    <a class="badge badge-remove"\n                       ng-click="deleteIndexFromList(index,\'allowed_hosts\')"><i class="fa fa-times"></i>\n                        {{ host }}</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class="form-group">\n        <div class="input-group">\n            <input class="form-control"\n                   placeholder="hostname:port"\n                   type="text"\n                   id="allowedHosts"\n                   required=""\n                   ng-model="input_hostname">\n            <div class="input-group-btn">\n                <button type="button" class="btn btn-success" ng-click="addTermToList(input_hostname,\'allowed_hosts\')">\n                    <i class="fa fa-plus"></i> Add host\n                </button>\n            </div>\n        </div>\n        <span class="help-block">List of fully qualified domain names that are allowed, along with the origin port. Format: <code>hostname:port</code>. When the list is empty accepts any host name to connect.</span>\n    </div>\n\n    <div class="form-group">\n        <h4>SSL Options</h4>\n        <div class="col-md-8">\n            <div class="input-group">\n                <span class="input-group-addon">\n                  <input type="checkbox" ng-model="data.extra_config[config_namespace].ssl_redirect"> Force SSL\n                </span>\n                <input type="text"\n                       class="form-control"\n                       ng-model="data.extra_config[config_namespace].ssl_host"\n                       placeholder="ssl.host.domain">\n\n\n\n            </div>\n        </div>\n        <div class="col-md-4">\n            <input type="text" class="form-control" ng-model="data.extra_config[config_namespace].ssl_port" placeholder="port">\n        </div>\n        <span class="help-block">If set to true all HTTP requests are redirected to HTTPS. If the hostname used to redirect to https differs from the current host, specify it in the box, otherwise leave it blank.</span>\n    </div>\n    <div class="form-group">\n        <label>SSL Certificate</label>\n        <input type="text" ng-model="data.extra_config[config_namespace].ssl_certificate" class="form-control"/>\n        <span class="help-block">Absolute path to the RSA certificate in case you want to use one.</span>\n\n    </div>\n    <div class="form-group">\n        <label>SSL Private key</label>\n        <input type="text" ng-model="data.extra_config[config_namespace].ssl_private_key" class="form-control"/>\n        <span class="help-block">Absolute path to the RSA private key.</span>\n\n    </div>\n\n    <div class="form-group">\n        <table class="table table-striped">\n            <tbody>\n            <tr>\n                <th>SSL Proxy header</th>\n                <th>Header value</th>\n                <th></th>\n            </tr>\n            <tr ng-repeat="(header,value) in data.extra_config[config_namespace].ssl_proxy_headers">\n                <td>{{ header }}</td>\n                <td>{{ value }}</td>\n                <td>\n                    <button type="button" class="btn btn-danger" ng-click="deleteKey(header,\'ssl_proxy_headers\')">\n                        <i class="fa fa-trash"></i> Remove\n                    </button>\n                </td>\n            </tr>\n            <tr>\n                <td><input type="text" class="form-control" ng-model="ssl_header" placeholder="X-Forwarded-Proto"></td>\n                <td><input type="text" class="form-control" ng-model="ssl_header_value" placeholder="https"></td>\n                <td>\n                    <button type="button" class="btn btn-success" ng-click="addKeyPair(ssl_header,ssl_header_value,\'ssl_proxy_headers\')">\n                        <i class="fa fa-plus"></i> Add header\n                    </button>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n        <span class="help-block">SSLProxyHeaders is set of header keys with associated values that would indicate a valid https request. Useful when using Nginx, e.g: "X-Forwarded-Proto": "https"</span>\n    </div>\n\n    <div class="form-group">\n        <h4>HTTP Strict Transport Security (HSTS)</h4>\n        <p>HSTS is a web security policy mechanism which helps to protect websites against protocol downgrade\n            attacks\n            and cookie hijacking. It allows web servers to declare that web browsers (or other complying user\n            agents)\n            should only interact with it using secure HTTPS connections, and never via the insecure HTTP\n            protocol.\n            When used the incoming links with http will be converted to https before accessing the server.</p>\n\n        <div class="input-group">\n            <div class="input-group-addon">max-age</div>\n            <input class="form-control" ng-model="data.extra_config[config_namespace].sts_seconds" type="text">\n            <div class="input-group-addon">seconds</div>\n        </div>\n\n        <span class="help-block">The <code>max-age</code> of the Strict-Transport-Security header. Setting to <code>0</code> disables HSTS!</span>\n\n        <div class="checkbox">\n            <label>\n                <input type="checkbox" ng-model="data.extra_config[config_namespace].sts_include_subdomains">\n                <strong>Include also subdomains</strong>\n            </label>\n            <span class="help-block">If this value is set to true, the <code>includeSubdomains</code> directive will be appended to the Strict-Transport-Security header.</span>\n        </div>\n    </div>\n\n\n    <div class="form-group">\n        <h4>Clickjacking</h4>\n        <div class="checkbox">\n            <label>\n                <input type="checkbox" ng-model="data.extra_config[config_namespace].frame_deny">\n                <strong>Enable clickjacking protection</strong>\n            </label>\n        <span class="help-block">Offers server-side partial protection against clickjacking when set to true, by adding the header <code>X-Frame-Options:\n            DENY</code>.</span>\n        </div>\n    </div>\n    <div class="form-group" ng-show="data.extra_config[config_namespace].frame_deny">\n        <div class="input-group">\n            <div class="input-group-addon">X-Frame-Options:</div>\n            <input type="text"\n                   ng-model="data.extra_config[config_namespace].custom_frame_options_value"\n                   class="form-control">\n        </div>\n        <span class="help-block">\n            Or use custom values:\n            <a href="" class="badge" ng-click="data.extra_config[config_namespace].custom_frame_options_value=\'DENY\'"><i class="fa fa-plus"></i> DENY</a>,\n            <a href="" class="badge" ng-click="data.extra_config[config_namespace].custom_frame_options_value=\'SAMEORIGIN\'"><i class="fa fa-plus"></i> SAMEORIGIN</a> or\n            <a href="" class="badge" ng-click="data.extra_config[config_namespace].custom_frame_options_value=\'ALLOW-FROM https://example.com\'"><i class="fa fa-plus"></i> ALLOW-FROM</a>\n        </span>\n\n    </div>\n\n    <div class="form-group">\n        <h4>HTTP Public Key Pinning (HPKP) </h4>\n        <div class="input-group">\n            <div class="input-group-addon">Public-Key-Pins:</div>\n            <input type="text"\n                   ng-model="data.extra_config[config_namespace].hpkp_public_key"\n                   class="form-control"\n                   placeholder=\'pin-sha256="base64=="; max-age=expireTime [; includeSubDomains][; report-uri="reportURI"]\'>\n        </div>\n        <span class="help-block">Allows HTTPS websites to resist impersonation by attackers using mis-issued or otherwise fraudulent certificates.</span>\n    </div>\n\n    <div class="form-group">\n        <h4>Sniffing</h4>\n        <div class="checkbox">\n            <label>\n                <input type="checkbox" ng-model="data.extra_config[config_namespace].content_type_nosniff">\n                <strong> MIME-sniffing prevention</strong>\n            </label>\n        <span class="help-block">When set prevents Internet Explorer from MIME-sniffing a response away from the declared content-type. This also applies to Google Chrome, when downloading extensions. Sets <code>X-Content-Type-Options:\n            nosniff</code></span>\n        </div>\n    </div>\n    <div class="form-group">\n        <h4>Cross-site scripting (XSS) protection</h4>\n        <div class="checkbox">\n            <label>\n                <input type="checkbox" ng-model="data.extra_config[config_namespace].browser_xss_filter">\n                <strong>Browser cross-site scripting (XSS) filter</strong>\n            </label>\n            <span class="help-block">When set adds the header <code>X-XSS-Protection: 1;\n                mode=block</code></span>\n        </div>\n        <div class="input-group">\n            <div class="input-group-addon">Content-Security-Policy:</div>\n            <input type="text"\n                   ng-model="data.extra_config[config_namespace].content_security_policy"\n                   class="form-control"\n                   placeholder="default-src \'self\';">\n        </div>\n    <span class="help-block">\n        Enable Content Security Policy (CSP) by writing your policies in the header (see <a href="https://content-security-policy.com/">reference</a>).\n    </span>\n    </div>\n</div>'),e.put("/src/app/middlewares/jose_signer.html",'<div class="box box-info box-solid">\n    <div class="box-header with-border">\n        <h3 class="box-title">\n            <input type="checkbox" ng-checked="isMiddlewareEnabled()" ng-click="toggleMiddleware()"> Enable JWT signing\n        </h3>\n        <div class="box-tools pull-right">\n            <button type="button" class="btn btn-box-tool" data-widget="collapse">\n                <i class="fa fa-minus"></i>\n            </button>\n        </div>\n    </div>\n    <div class="box-body">\n        <p ng-if="!isMiddlewareEnabled()">Enable to sign JWT tokens</p>\n        <div ng-if="isMiddlewareEnabled()">\n            <div class="form-group">\n                <div class="col-md-6">\n                    <label>JWK URI</label>\n                    <input type="text" ng-model="data.extra_config[config_namespace][\'jwk-url\']" class="form-control" />\n                    <span class="help-block">The URL to your JWK endpoint with the set of private keys used to sign the token</span>\n                </div>\n                <div class="col-md-6">\n                    <label class="control-label">Algorithm</label>\n                    <select class="form-control" ng-model="data.extra_config[config_namespace].alg" id="data.extra_config[config_namespace].alg"\n                        name="data.extra_config[config_namespace].alg">\n                        <option ng-repeat="(alg,desc) in constants.jose_algorithms" value="{{ alg }}">{{ desc }}</option>\n                    </select>\n                    <span class="help-block">Digital signatures and MACs algorithm</span>\n                </div>\n            </div>\n            <div class="form-group">\n                <div class="col-md-6">\n                    <label class="control-label">Keys to sign</label>\n                    <div class="input-group">\n                        <input class="form-control" placeholder="" type="text" required="" ng-model="input_key">\n                        <div class="input-group-btn">\n                            <button type="button" class="btn btn-success" ng-click="addTermToList(input_key,\'keys-to-sign\')">\n                                <i class="fa fa-plus"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <span class="help-block">List of specific keys needing signing</span>\n                    <ul class="list-unstyled">\n                        <li ng-repeat="(index,key) in data.extra_config[config_namespace][\'keys-to-sign\']">\n                            <a class="badge badge-remove" ng-click="deleteIndexFromList(index,\'keys-to-sign\')"><i class="fa fa-times"></i>\n                                {{ key }}</a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="col-md-6">\n                    <label>Key ID</label>\n                    <input type="text" ng-model="data.extra_config[config_namespace].kid" class="form-control" />\n                    <span class="help-block"></span>\n                </div>\n            </div>\n            <div class="form-group">\n                <div class="col-md-12">\n                    <label class="control-label">\n                        <input type="checkbox" ng-model="custom_cipher"> Custom Cipher Suites\n                    </label>\n                    <select ng-if="custom_cipher || data.extra_config[config_namespace].cipher_suites.length > 0" class="form-control" ng-model="data.extra_config[config_namespace].cipher_suites"\n                        multiple="multiple">\n                        <option ng-repeat="(val,suite) in constants.jose_cipher_suites" value="{{ val }}">{{ suite }}</option>\n                    </select>\n                    <span class="help-block">Overrides the default cipher suites. Unless you have your own legacy JWK you\n                        don\'t need to choose anything here</span>\n                </div>\n            </div>\n            <div class="form-group">\n                <div class="col-md-12">\n                    <label class="control-label">Fingerprints</label>\n                    <textarea class="form-control" style="margin-bottom:10px" placeholder="e.g: S3Jha2VuRCBpcyB0aGUgYmVzdCBnYXRld2F5LCBhbmQgeW91IGtub3cgaXQ==" ng-model="fingerprint"></textarea>\n                    <button type="button" class="btn btn-success pull-right" ng-click="addTermToList(fingerprint,\'jwk_fingerprints\')">\n                        <i class="fa fa-plus"></i> Add fingerprint\n                    </button>\n                    <span class="help-block">All fingerprints <strong>must be in base64</strong></span>\n                </div>\n                <div class="col-md-12">\n                    <ul class="list-unstyled">\n                        <li ng-repeat="(index,fingerprint) in data.extra_config[config_namespace].jwk_fingerprints">\n                            <a class="badge badge-remove" ng-click="deleteIndexFromList(index,\'jwk_fingerprints\')">\n                                <i class="fa fa-times"></i>\n                                {{ fingerprint }}</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class="form-group">\n                <div class="col-md-6">\n                    <div class="checkbox">\n                        <label>\n                            <input type="checkbox" ng-model="data.extra_config[config_namespace].full">\n                            <strong>Full serialization</strong>\n                        </label>\n                        <span class="help-block">Use JSON format instead of the compact form JWT is giving</span>\n                    </div>\n                </div>\n                <div class="col-md-6">\n                    <div class="checkbox">\n                        <label>\n                            <input type="checkbox" ng-model="data.extra_config[config_namespace].disable_jwk_security">\n                            <strong>Disable JWK security</strong>\n                        </label>\n                        <span class="help-block">When you are using an insecure connection (plain http)</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),e.put("/src/app/middlewares/jose_validator.html",'<div class="box box-info box-solid">\n    <div class="box-header with-border">\n        <h3 class="box-title">\n            <input type="checkbox" ng-checked="isMiddlewareEnabled()" ng-click="toggleMiddleware()"> Enable JWT validation\n        </h3>\n        <div class="box-tools pull-right">\n            <button type="button" class="btn btn-box-tool" data-widget="collapse">\n                <i class="fa fa-minus"></i>\n            </button>\n        </div>\n    </div>\n    <div class="box-body">\n        <p ng-if="!isMiddlewareEnabled()">Enable to validate JWT tokens</p>\n        <div ng-if="isMiddlewareEnabled()">\n            <div class="form-group">\n                <div class="col-md-6">\n                    <label>JWK URI</label>\n                    <input type="text" ng-model="data.extra_config[config_namespace][\'jwk-url\']" class="form-control" />\n                    <span class="help-block">The URL to your JWK endpoint with the set of public keys used to verify the\n                        authenticity of JWT</span>\n                </div>\n                <div class="col-md-6">\n                    <label class="control-label">Algorithm</label>\n                    <select class="form-control" ng-model="data.extra_config[config_namespace].alg" id="data.extra_config[config_namespace].alg"\n                        name="data.extra_config[config_namespace].alg">\n                        <option ng-repeat="(alg,desc) in constants.jose_algorithms" value="{{ alg }}">{{ desc }}</option>\n                    </select>\n                    <span class="help-block">Digital signatures and MACs algorithm</span>\n                </div>\n            </div>\n            <div class="form-group">\n                <div class="col-md-12">\n                    <label>Issuer</label>\n                    <input type="text" ng-model="data.extra_config[config_namespace].issuer" class="form-control" />\n                    <span class="help-block">Who is the expected issuer of the claim</span>\n                </div>\n            </div>\n\n            <div class="form-group">\n                <div class="col-md-6">\n                    <label class="control-label">Audience</label>\n                    <div class="input-group">\n                        <input class="form-control" placeholder="http://api.example.com" type="text" required="" ng-model="input_audience">\n                        <div class="input-group-btn">\n                            <button type="button" class="btn btn-success" ng-click="addTermToList(input_audience,\'audience\')">\n                                <i class="fa fa-plus"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <span class="help-block">List of all the audiences supported by this endpoint</span>\n                    <ul class="list-unstyled">\n                        <li ng-repeat="(index,aud) in data.extra_config[config_namespace].audience">\n                            <a class="badge badge-remove" ng-click="deleteIndexFromList(index,\'audience\')"><i class="fa fa-times"></i>\n                                {{ aud }}</a>\n                        </li>\n                    </ul>\n\n                </div>\n                <div class="col-md-6">\n                    <label class="control-label">Roles</label>\n                    <div class="input-group">\n                        <input class="form-control" placeholder="admin" type="text" required="" ng-model="input_role">\n                        <div class="input-group-btn">\n                            <button type="button" class="btn btn-success" ng-click="addTermToList(input_role,\'roles\')">\n                                <i class="fa fa-plus"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <span class="help-block">List of all the roles allowed to access this endpoint</span>\n                    <ul class="list-unstyled">\n                        <li ng-repeat="(index,aud) in data.extra_config[config_namespace].roles">\n                            <a class="badge badge-remove" ng-click="deleteIndexFromList(index,\'roles\')"><i class="fa fa-times"></i>\n                                {{ aud }}</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class="form-group">\n                <div class="col-md-6">\n                    <label>Roles Key</label>\n                    <input type="text" ng-model="data.extra_config[config_namespace].roles_key" placeholder="roles" class="form-control" />\n                    <span class="help-block">Keyname where the roles are stored</span>\n                </div>\n                <div class="col-md-6">\n                    <label>Cookie name</label>\n                    <input type="text" ng-model="data.extra_config[config_namespace].cookie_key" class="form-control" />\n                    <span class="help-block">The key name of the cookie </span>\n                </div>\n            </div>\n            <div class="form-group">\n                <div class="col-md-12">\n                    <label class="control-label">Fingerprints</label>\n                    <textarea class="form-control" style="margin-bottom:10px;" placeholder="e.g: S3Jha2VuRCBpcyB0aGUgYmVzdCBnYXRld2F5LCBhbmQgeW91IGtub3cgaXQ==" ng-model="fingerprint"></textarea>\n                    <button type="button" class="btn btn-success pull-right" ng-click="addTermToList(fingerprint,\'jwk_fingerprints\')">\n                        <i class="fa fa-plus"></i> Add fingerprint\n                    </button>\n                    <span class="help-block">All fingerprints <strong>must be in base64</strong></span>\n                </div>\n                <div class="col-md-12">\n                    <ul class="list-unstyled">\n                        <li ng-repeat="(index,fingerprint) in data.extra_config[config_namespace].jwk_fingerprints">\n                            <a class="badge badge-remove" ng-click="deleteIndexFromList(index,\'jwk_fingerprints\')"><i class="fa fa-times"></i>\n                                {{ fingerprint }}</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class="form-group">\n                <div class="col-md-12">\n                    <label class="control-label">\n                        <input type="checkbox" ng-model="custom_cipher"> Custom Cipher Suites\n                    </label>\n                    <select ng-if="custom_cipher || data.extra_config[config_namespace].cipher_suites.length > 0" class="form-control" ng-model="data.extra_config[config_namespace].cipher_suites"\n                        multiple="multiple">\n                        <option ng-repeat="(val,suite) in constants.jose_cipher_suites" value="{{ val }}">{{ suite }}</option>\n                    </select>\n                    <span class="help-block">Overrides the default cipher suites. Unless you have your own legacy JWK you\n                        don\'t need to choose anything here</span>\n                </div>\n            </div>\n            <div class="form-group">\n                <div class="col-md-6">\n                    <div class="checkbox">\n                        <label>\n                            <input type="checkbox" ng-model="data.extra_config[config_namespace].cache">\n                            <strong>Enable caching</strong>\n                        </label>\n                        <span class="help-block">If this value is set to true validated tokens will be stored in-memory for\n                            repeated validations</span>\n                    </div>\n                </div>\n                <div class="col-md-6">\n                    <div class="checkbox">\n                        <label>\n                            <input type="checkbox" ng-model="data.extra_config[config_namespace].disable_jwk_security">\n                            <strong>Disable JWK security</strong>\n                        </label>\n                        <span class="help-block">When you are using an insecure connection (plain http)</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),e.put("/src/app/middlewares/metrics.html",'<div class="box box-primary">\n  <div class="box-header with-border">\n    <h3 class="box-title"><input type="checkbox"\n          ng-checked="isMiddlewareEnabled()"\n          ng-click="toggleMiddleware()"> Metrics</h3>\n  </div>\n\n  <div class="box-body" ng-if="isMiddlewareEnabled()">\n    <p>The metrics <em>middleware</em> listens in a new address and exposes a <code>/__stats/</code> endpoint with all the KrakenD metrics.</p>\n    <div class="form-group">\n      <div class="checkbox">\n        <label>\n          <input type="checkbox"\n          ng-model="data.extra_config[config_namespace].endpoint_disabled">\n          <strong>Disable /__stats/ endpoint</strong> - Metrics won\'t be published but still collected.\n        </label>\n      </div>\n      <div class="checkbox">\n        <label>\n          <input type="checkbox"\n          ng-model="data.extra_config[config_namespace].proxy_disabled">\n          <strong>Disable proxy</strong> - Skip any metrics happening in the proxy layer\n        </label>\n      </div>\n      <div class="checkbox">\n        <label>\n          <input type="checkbox"\n          ng-model="data.extra_config[config_namespace].router_disabled">\n          <strong>Disable router</strong> - Skip any metrics happening in the router layer\n        </label>\n      </div>\n      <div class="checkbox">\n        <label>\n          <input type="checkbox"\n          ng-model="data.extra_config[config_namespace].backend_disabled">\n          <strong>Disable backend layer metrics</strong> - Skip any metrics when interacting with backends\n        </label>\n      </div>\n    </div>\n\n    <div class="row">\n      <div class="col-md-6">\n        <label class="control-label">Listen Address</label>\n\n        <input type="text"\n        class="form-control"\n        ng-model="data.extra_config[config_namespace].listen_address"\n        placeholder="0.0.0.0:8090">\n\n        <div class="help-block">\n          Change the listen address where the metrics endpoint will be exposed. Defaults to <code>:8090</code>.\n        </div>\n      </div>\n      <div class="col-md-6">\n       <div class="form-group" ng-class="validator.isValidTimeUnit(data.extra_config[config_namespace].collection_time) ? \'\' : \'has-error\'">\n        <label class="control-label">Collection time</label>\n\n\n        <input type="text"\n        class="form-control"\n        ng-model="data.extra_config[config_namespace].collection_time"\n        placeholder="60s">\n      </div>\n\n      <div class="help-block">\n        <p ng-hide="validator.isValidTimeUnit(data.extra_config[config_namespace].collection_time)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n        Time window. Defaults to 60 seconds.\n      </div>\n    </div>\n  </div>\n</div>\n</div>'),e.put("/src/app/middlewares/oauth.html",'<label>\n\t<input type="checkbox"\n\tng-checked="isMiddlewareEnabled()"\n\tng-click="toggleMiddleware()"> Enable <strong>OAuth2 Client Credentials</strong> middleware (<a href="https://github.com/devopsfaith/krakend-oauth2-clientcredentials">view source</a>)\n</label>\n<div id="oauth-options-wrapper" ng-hide="!isMiddlewareEnabled()">\n\t<div class="form-group">\n\t\t<div class="col-md-6">\n\t\t\t<label class="control-label" for="data.extra_config[config_namespace].client_id">Client ID</label>\n\t\t\t<input class="form-control"\n\t\t\tng-model="data.extra_config[config_namespace].client_id"\n\t\t\tid="data.extra_config[config_namespace].client_id"\n\t\t\tname="data.extra_config[config_namespace].client_id"\n\t\t\ttype="text">\n\t\t\t<span class="help-block">The Client ID as it will provided to the Auth server</span>\n\t\t</div>\n\n\t\t<div class="col-md-6">\n\t\t\t<label class="control-label" for="data.extra_config[config_namespace].client_secret">Client Secret</label>\n\t\t\t<input class="form-control"\n\t\t\tng-model="data.extra_config[config_namespace].client_secret"\n\t\t\tid="data.extra_config[config_namespace].client_secret"\n\t\t\tname="data.extra_config[config_namespace].client_secret"\n\t\t\ttype="text">\n\t\t\t<span class="help-block">The Client secret as it will provided to the Auth server</span>\n\t\t</div>\n\t</div>\n\t<div class="form-group ">\n\t\t<div class="col-md-6">\n\t\t\t<label class="control-label" for="data.extra_config[config_namespace].token_url">Token URL</label>\n\t\t\t<input class="form-control"\n\t\t\tng-model="data.extra_config[config_namespace].token_url"\n\t\t\tid="data.extra_config[config_namespace].token_url"\n\t\t\tname="data.extra_config[config_namespace].token_url"\n\t\t\ttype="text">\n\t\t\t<span class="help-block">The URL where the negotiation of the token will happen</span>\n\t\t</div>\n\n\t\t<div class="col-md-6">\n\t\t\t<label class="control-label" for="data.extra_config[config_namespace].scopes">Scopes</label>\n\t\t\t<input class="form-control"\n\t\t\tng-model="data.extra_config[config_namespace].scopes"\n\t\t\tid="data.extra_config[config_namespace].scopes"\n\t\t\tname="data.extra_config[config_namespace].scopes"\n\t\t\ttype="text">\n\t\t\t<span class="help-block">Comma separated list of scopes needed</span>\n\t\t</div>\n\t</div>\n\t<div class="form-group">\n\t\t<div class="col-md-12">\n\t\t\t<label>Additional endpoint parameters</label>\n\t\t</div>\n\t\t<div class="col-md-6">\n\n\t\t\t<div class="input-group row">\n\t\t\t\t<div class="col-md-4">\n\t\t\t\t\t<input class="form-control"\n\t\t\t\t\tplaceholder="name"\n\t\t\t\t\ttype="text"\n\t\t\t\t\tng-model="endpoint_parameters_key">\n\t\t\t\t</div>\n\t\t\t\t<div class="col-md-4">\n\t\t\t\t\t<input class="form-control"\n\t\t\t\t\tplaceholder="value"\n\t\t\t\t\ttype="text"\n\t\t\t\t\tng-model="endpoint_parameters_value">\n\t\t\t\t</div>\n\t\t\t\t<div class="col-md-4">\n\t\t\t\t\t<button type="button" class="btn btn-success" ng-click="addKeyPair(endpoint_parameters_key,endpoint_parameters_value,\'endpoint_params\')">\n\t\t\t\t\t\t<i class="fa fa-plus"></i> Add  parameter\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<span class="help-block">\n\t\t\t\tEnter here any additional parameters that you want to <strong>include in the payload</strong>\n\t\t\t\twhen requesting the token. For instance, it is frequent to add the <code>audience</code>\n\t\t\t\trequest parameter that denotes the target API for which the token should be issued.\n\t\t\t</span>\n\n\t\t</div>\n\t\t<div class="col-md-6">\n\t\t\t<ul class="list-unstyled">\n\t\t\t\t<li ng-repeat="(index,param) in data.extra_config[config_namespace].endpoint_params">\n\t\t\t\t\t<a class="badge badge-remove"\n\t\t\t\t\tng-click="deleteKey(index,\'endpoint_params\')"\n\t\t\t\t\ttitle="Click to delete parameter"><i class="fa fa-times"></i> {{ index }}={{ param }} </a>\n\t\t\t\t</li>\n\t\t\t\t<li ng-if="!data.extra_config[config_namespace].endpoint_params">\n\t\t\t\t\tNo additional parameters are active yet.\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n</div>'),e.put("/src/app/middlewares/ratelimit_router.html",'<div class="form-group">\n\t<div class="checkbox">\n\t\t<label>\n\t\t\t<input type="checkbox" ng-checked="isMiddlewareEnabled()" ng-click="toggleMiddleware()">\n\t\t\t<strong>Enable rate limiting for <code>{{ data.endpoint }}</code></strong>\n\t\t</label>\n\t\t<span class="help-block">Limit the number of requests this endpoint can receive. Read more on <a href="/docs/throttling/rate-limit">rate limiting</a></span>\n\t</div>\n</div>\n<div ng-if="isMiddlewareEnabled()">\n\t<div class="form-group" ng-class="validator.isInteger(data.extra_config[config_namespace].maxRate) ? \'\' : \'has-error\'">\n\t\t<label class="control-label">Rate limit</label>\n\t\t<div class="input-group">\n\t\t\t<input class="form-control"\n\t\t\tng-model="data.extra_config[config_namespace].maxRate"\n\t\t\tid="data.extra_config[config_namespace].maxRate"\n\t\t\tname="data.extra_config[config_namespace].maxRate"\n\t\t\ttype="number">\n\t\t\t<div class="input-group-addon">reqs/sec</div>\n\t\t</div>\n\t\t<span class="help-block">Maximum requests per second you want to let this endpoint handle. Leave <code>0</code> for no default limit.\n\t\t</span>\n\t</div>\n\t<div class="form-group" ng-class="validator.isInteger(data.extra_config[config_namespace].clientMaxRate) ? \'\' : \'has-error\'">\n\t\t<label class="control-label">Default user quota</label>\n\t\t<div class="input-group">\n\t\t\t<input class="form-control"\n\t\t\tng-model="data.extra_config[config_namespace].clientMaxRate"\n\t\t\tid="data.extra_config[config_namespace].clientMaxRate"\n\t\t\tname="data.extra_config[config_namespace].clientMaxRate"\n\t\t\ttype="number">\n\t\t\t<div class="input-group-addon">reqs/sec</div>\n\t\t</div>\n\t\t<span class="help-block">Maximum requests per second you want to allow to each different API user. This\n\t\t\tvalue will be used as default for all the endpoints unless overridden in each of them. Use <code>0</code>\n\t\t\tfor no limitation.\n\t\t</span>\n\t\t<div ng-show="0 != data.extra_config[config_namespace].clientMaxRate">\n\t\t\t<p><strong>A unique user is identified by...</strong></p>\n\t\t\t<div class="input-group" class="form-control">\n\t\t\t\t<input type="radio" name="strategy_ip" value="ip"\n\t\t\t\tng-checked="data.extra_config[config_namespace].strategy==\'ip\'"\n\t\t\t\tng-click="data.extra_config[config_namespace].key=\'\'"\n\t\t\t\tng-model="data.extra_config[config_namespace].strategy">\n\t\t\t\tIts originating IP\n\t\t\t</div>\n\t\t\t<div class="input-group" class="form-control">\n\t\t\t\t<input type="radio" name="strategy_header" value="header"\n\t\t\t\tng-checked="data.extra_config[config_namespace].key!=\'\'"\n\t\t\t\tng-model="data.extra_config[config_namespace].strategy">\n\t\t\t\tA custom header:\n\t\t\t\t<input type="text" ng-model="data.extra_config[config_namespace].key"\n\t\t\t\tplaceholder="X-TOKEN">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>'),e.put("/src/app/service/http_client_settings.html",'<div class="box box-primary collapsed-box">\n  <div class="box-header with-border">\n    <h3 class="box-title">HTTP Client settings (Advanced)</h3>\n    <div class="pull-right">\n      <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-plus"></i>\n      </button>\n    </div>\n  </div>\n  \x3c!-- /.box-header --\x3e\n  <div class="box-body">\n    <p>These are specific settings to deal with the HTTP client used to query your backends. You usually don\'t need to set any of these values</p>\n    <div class="col-md-12">\n      <h4>Timeouts</h4>\n    </div>\n    <div class="form-group">\n      <div class="col-md-4"  ng-class="isValidTimeUnit(service.idle_connection_timeout) ? \'\' : \'has-error\'">\n        <label class="control-label" for="service.idle_connection_timeout">IDLE Connection Timeout</label>\n        <input class="form-control"\n        id="service.idle_connection_timeout"\n        name="service.idle_connection_timeout"\n        ng-model="service.idle_connection_timeout"\n        placeholder="0s"\n        type="text">\n        <div class="help-block">\n          <p ng-hide="isValidTimeUnit(service.idle_connection_timeout)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n          <p>Maximum amount of time an idle (keep-alive) connection will remain idle before closing itself.\n          Zero means no limit</p>\n        </div>\n      </div>\n      <div class="col-md-4" ng-class="isValidTimeUnit(service.response_header_timeout) ? \'\' : \'has-error\'">\n        <label class="control-label" for="service.response_header_timeout">Response Header Timeout</label>\n        <input class="form-control"\n        id="service.response_header_timeout"\n        name="service.response_header_timeout"\n        ng-model="service.response_header_timeout"\n        placeholder="0s"        type="text">\n        <div class="help-block">\n          <p ng-hide="isValidTimeUnit(service.response_header_timeout)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n          <p>Time to wait for a server\'s response headers after fully writing the request. This time does not include the time to read the response body.</p>\n        </div>\n      </div>\n      <div class="col-md-4" ng-class="isValidTimeUnit(service.expect_continue_timeout) ? \'\' : \'has-error\'">\n        <label class="control-label" for="service.expect_continue_timeout">Expect Continue Timeout</label>\n        <input class="form-control"\n        id="service.expect_continue_timeout"\n        name="service.expect_continue_timeout"\n        ng-model="service.expect_continue_timeout"\n        placeholder="0s"\n        type="text">\n        <div class="help-block">\n          <p ng-hide="isValidTimeUnit(service.expect_continue_timeout)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n          <p>Time to wait for a server\'s first response headers after fully writing the request headers if the request has an <code>"Expect: 100-continue"</code> header. Zero means no timeout</p>\n        </div>\n      </div>\n    </div>\n    <div class="col-md-12">\n      <hr/>\n      <h4>Connections</h4>\n    </div>\n    <div class="form-group">\n      <div class="col-md-3" ng-class="isInteger(service.max_idle_connections) ? \'\' : \'has-error\'">\n        <label class="control-label">Maximum IDLE connections</label>\n        <input class="form-control"\n        ng-model="service.max_idle_connections"\n        type="text">\n        <span class="help-block">Maximum number of idle (keep-alive) connections across all hosts. <code>0</code> means no limit.\n        </span>\n      </div>\n      <div class="col-md-3" ng-class="isInteger(service.max_idle_connections_per_host) ? \'\' : \'has-error\'">\n        <label class="control-label">Maximum IDLE connections per host</label>\n        <input class="form-control"\n        ng-model="service.max_idle_connections_per_host"\n        type="text">\n        <span class="help-block">Maximum number of IDLE connections that you allow per-host.\n          Defaults to <code>250</code>.\n        </span>\n      </div>\n      <div class="col-md-3">\n        <div class="checkbox">\n          <label for="service.disable_keep_alives">\n            <input type="checkbox"\n            id="service.disable_keep_alives"\n            name="service.disable_keep_alives"\n            ng-model="service.disable_keep_alives"\n            placeholder="0s"\n            type="text">\n            <strong>Disable Keep-Alives</strong>\n          </label>\n          <div class="help-block">\n            <p>If set prevents re-use of TCP connections between different HTTP request</p>\n          </div>\n        </div>\n      </div>\n      <div class="col-md-3">\n        <div class="checkbox">\n          <label for="service.disable_compression">\n            <input type="checkbox"\n            id="service.disable_compression"\n            name="service.disable_compression"\n            ng-model="service.disable_compression"\n            placeholder="0s"\n            type="text">\n            <strong>Disable Compression</strong>\n          </label>\n          <div class="help-block">\n            <p>If set, prevents the Transport from requesting compression with an <code>"Accept-Encoding: gzip"</code> request header.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="col-md-12">\n      <hr/>\n      <h4>Dial settings</h4>\n    </div>\n    <div class="form-group">\n      <div class="col-md-4" ng-class="isValidTimeUnit(service.dialer_timeout) ? \'\' : \'has-error\'">\n        <label class="control-label" for="service.dialer_timeout">Dialer Timeout</label>\n        <input class="form-control"\n        id="service.dialer_timeout"\n        name="service.dialer_timeout"\n        ng-model="service.dialer_timeout"\n        placeholder="0s"        type="text">\n        <div class="help-block">\n          <p ng-hide="isValidTimeUnit(service.dialer_timeout)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n          <p>Maximum amount of time a dial will wait for a connect to complete</p>\n        </div>\n      </div>\n      <div class="col-md-4" ng-class="isValidTimeUnit(service.dialer_fallback_delay) ? \'\' : \'has-error\'">\n        <label class="control-label" for="service.dialer_fallback_delay">Dialer Fallback Delay</label>\n        <input class="form-control"\n        id="service.dialer_fallback_delay"\n        name="service.dialer_fallback_delay"\n        ng-model="service.dialer_fallback_delay"\n        placeholder="0s"        type="text">\n        <div class="help-block">\n          <p ng-hide="isValidTimeUnit(service.dialer_fallback_delay)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n          <p>Length of time to wait before spawning a fallback connection. If zero, a default delay of 300ms is used.</p>\n        </div>\n      </div>\n      <div class="col-md-4" ng-class="isValidTimeUnit(service.dialer_keep_alive) ? \'\' : \'has-error\'">\n        <label class="control-label" for="service.dialer_keep_alive">Dialer Keep-Alive</label>\n        <input class="form-control"\n        id="service.dialer_keep_alive"\n        name="service.dialer_keep_alive"\n        ng-model="service.dialer_keep_alive"\n        placeholder="0s"        type="text">\n        <div class="help-block">\n          <p ng-hide="isValidTimeUnit(service.dialer_keep_alive)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n          <p>Keep-alive period for an active network connection. If zero, keep-alives are not enabled.</p>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="box-footer">\n    <p><i class="fa fa-info"></i> For a more detailed explanation of this settings see the comments in the <a href="https://golang.org/src/net/http/transport.go#L160">HTTP client implementation</a></p>\n  </div>\n</div>'),e.put("/src/app/service/http_server_settings.html",'<div class="box box-primary">\n  <div class="box-header with-border">\n    <h3 class="box-title">HTTP Server settings</h3>\n  </div>\n  \x3c!-- /.box-header --\x3e\n  <div class="box-body">\n    <p>Settings of the KrakenD http server</p>\n    <div class="form-group">\n      <div class="col-md-6" ng-class="isValidTimeUnit(service.read_timeout) ? \'\' : \'has-error\'">\n        <label class="control-label" for="service.read_timeout">HTTP Read Timeout</label>\n        <input class="form-control"\n        id="service.read_timeout"\n        name="service.read_timeout"\n        ng-model="service.read_timeout"\n        placeholder="0s"\n        type="text">\n        <div class="help-block">\n          <p ng-hide="isValidTimeUnit(service.read_timeout)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n          <p>Maximum duration for reading the entire http request, including the body.</p>\n        </div>\n      </div>\n      <div class="col-md-6" ng-class="isValidTimeUnit(service.write_timeout) ? \'\' : \'has-error\'">\n        <label class="control-label" for="service.write_timeout">HTTP Write Timeout</label>\n        <input class="form-control"\n        id="service.write_timeout"\n        name="service.write_timeout"\n        ng-model="service.write_timeout"\n        placeholder="0s"\n        type="text">\n        <div class="help-block">\n          <p ng-hide="isValidTimeUnit(service.write_timeout)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n          <p>Maximum duration before timing out writes of the response</p>\n        </div>\n      </div>\n    </div>\n    <div class="form-group">\n      <div class="col-md-6" ng-class="isValidTimeUnit(service.idle_timeout) ? \'\' : \'has-error\'">\n        <label class="control-label" for="service.idle_timeout">HTTP Idle Timeout</label>\n        <input class="form-control"\n        id="service.idle_timeout"\n        name="service.idle_timeout"\n        ng-model="service.idle_timeout"\n        placeholder="0s"\n        type="text">\n        <div class="help-block">\n          <p ng-hide="isValidTimeUnit(service.idle_timeout)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n          <p>Maximum amount of time to wait for the next request when keep-alives are enabled</p>\n        </div>\n      </div>\n      <div class="col-md-6" ng-class="isValidTimeUnit(service.read_header_timeout) ? \'\' : \'has-error\'">\n        <label class="control-label" for="service.read_header_timeout">HTTP Read Header Timeout</label>\n        <input class="form-control"\n        id="service.read_header_timeout"\n        name="service.read_header_timeout"\n        ng-model="service.read_header_timeout"\n        placeholder="0s"\n        type="text">\n        <div class="help-block">\n          <p ng-hide="isValidTimeUnit(service.read_header_timeout)"ng-include src="\'/src/app/forms/time_units.html\'"></p>\n          <p>Amount of time allowed to read request headers</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>'),e.put("/src/app/service/options.html",'<div class="box box-primary">\n  <div class="box-header with-border">\n    <h3 class="box-title">Options</h3>\n  </div>\n  \x3c!-- /.box-header --\x3e\n  <div class="box-body">\n    <div class="form-group">\n      <label class="control-label">Output encoding</label>\n      <div class="input-group">\n        <select class="form-control"\n          ng-model="service.output_encoding"\n          id="service.output_encoding"\n          name="service.output_encoding"\n          ng-init="service.output_encoding=\'json\'">\n          <option value="json">JSON</option>\n          <option value="negotiate">Negotiate content</option>\n          <option value="string">String (text/plain)</option>\n          <option value="noop">No-op (just proxy)</option>\n        </select>\n        <div class="help-block">\n          <p>Render register used <strong>by default</strong> to encode the output of KrakenD endpoints. You can change this setting later per endpoint.</p>\n        </div>\n      </div>\n      <div class="checkbox">\n          <label for="service.disable_rest">\n            <input type="checkbox"\n            id="service.disable_rest"\n            name="service.disable_rest"\n            ng-model="service.disable_rest">\n            <strong>Allow non-RESTful resource naming</strong>\n          </label>\n          <div class="help-block">\n            <p>If your backends do not respect RESTful resource naming enable this option. KrakenD will allow you to query URL patterns like <code>/url.{some_variable}.json</code></p>\n          </div>\n    </div>\n  </div>\n</div>'),e.put("/src/app/service/timeouts.html",'<div class="box box-primary">\n  <div class="box-header with-border">\n    <h3 class="box-title">Timeouts and TTL</h3>\n  </div>\n  \x3c!-- /.box-header --\x3e\n  <div class="box-body">\n    <p>All settings below are used across all backends unless specifically overridden in each endpoint</p>\n    <div class="form-group" ng-class="isValidTimeUnit(service.timeout) ? \'\' : \'has-error\'">\n      <label class="control-label" for="service.timeout">Backend Timeout</label>\n      <input class="form-control"\n      id="service.timeout"\n      name="service.timeout"\n      ng-model="service.timeout"\n      placeholder="3000ms"\n      ng-init="service.timeout=\'3000ms\'"\n      type="text">\n      <div class="help-block">\n        <p ng-hide="isValidTimeUnit(service.timeout)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n        <p>This is the <strong>default timeout</strong> for all the outgoing connections against your\n        backends and takes into account the duration of all the pipe. This value can be overridden later on specific endpoints.</p>\n      </div>\n    </div>\n    <div class="form-group" ng-class="isValidTimeUnit(service.cache_ttl) ? \'\' : \'has-error\'">\n      <label class="control-label" for="service.cache_ttl">Default Cache TTL</label>\n      <input\n      class="form-control"\n      ng-model="service.cache_ttl" type="text"\n      placeholder="300"\n      ng-init="service.cache_ttl=\'300s\'">\n      <div class="help-block">\n        <p ng-hide="isValidTimeUnit(service.cache_ttl)" ng-include src="\'/src/app/forms/time_units.html\'"></p>\n        <p ng-hide="isInteger(service.cache_ttl)">Value must be an integer expressing the number of seconds</p>\n        <p>Time the service considers the origin is still valid. Applies\n          to GET requests only. The service does not cache anything but facilitates\n        the headers for proxies to do the caching (e.g: Varnish server).</p>\n      </div>\n    </div>\n  </div>\n</div>')}])},function(e,n){angular.module("KrakenDesigner").directive("jsonFormatter",function(){return{restrict:"A",require:"ngModel",scope:!0,link:function(e,n,t,a){a.$parsers.push(function(n){try{var t=null;return""!=n&&(t=JSON.parse(n)),delete e.service.extra_config.krakendesigner.json_errors,t}catch(n){return e.service.extra_config.krakendesigner.json_valid=!0,e.service.extra_config.krakendesigner.json_errors=n.message,!1}}),a.$formatters.push(function(e){return JSON.stringify(e,void 0,2)})}}})},function(e,n){angular.module("KrakenDesigner").directive("opencensus",function(){return{restrict:"E",templateUrl:"/src/app/metrics/opencensus.html",scope:{data:"=",inherit:"="},link:function(e,n,t){var a={sample_rate:100,reporting_period:1,exporters:{}},i="github_com/devopsfaith/krakend-opencensus";e.data.extra_config=Object.assign({},e.data.extra_config),e.config_namespace=i,e.isMiddlewareEnabled=function(){return void 0!==e.data.extra_config[i]},e.toggleOpencensusMiddleware=function(n){n?e.data.extra_config[i]=a:delete e.data.extra_config[i]},e.toggleXRayAuth=function(){void 0!==e.data.extra_config[i].exporters.xray.access_key_id?(delete e.data.extra_config[i].exporters.xray.access_key_id,delete e.data.extra_config[i].exporters.xray.secret_access_key):(e.data.extra_config[i].exporters.xray.access_key_id="",e.data.extra_config[i].exporters.xray.secret_access_key="")},e.backendIsEnabled=function(n){return e.isMiddlewareEnabled()&&void 0!==e.data.extra_config[i].exporters&&void 0!==e.data.extra_config[i].exporters[n]},e.toggleOpencensusBackend=function(n,t){void 0===e.data.extra_config[i]&&(e.data.extra_config[i]=a),n?e.data.extra_config[i].exporters[t]={}:(delete e.data.extra_config[i].exporters[t],Object.keys(e.data.extra_config[i].exporters).length||delete e.data.extra_config[i])},e.isValidTimeUnit=function(e){return void 0===e||""==e||/^\d+(ns|us|µs|ms|s|m|h)$/.test(e)}}}})},function(e,n){angular.module("KrakenDesigner").directive("middleware",["InputValidator","DefaultConfig","Constants",function(e,n,t){return{restrict:"E",template:'<div ng-include="getTemplate()"></div>',scope:{data:"=",inherit:"=",namespace:"="},link:function(a,i,o){var s=a.namespace,l={};void 0!==n.extra_config[s]&&(l=n.extra_config[s]),a.data.extra_config=Object.assign({},a.data.extra_config),"object"==typeof a.inherit&&(s=s.replace("github_com","github.com"),a.data.extra_config[s]=angular.copy(Object.assign(l,a.inherit,a.data.extra_config[s]))),a.config_namespace=s,a.validator=e,a.constants=t,a.getTemplate=function(){return"/src/app/middlewares/"+o.template},a.toggleMiddleware=function(){a.isMiddlewareEnabled()?delete a.data.extra_config[s]:a.data.extra_config[s]=l},a.isMiddlewareEnabled=function(){return void 0!==a.data.extra_config[s]},a.addKeyPair=function(e,n,t=!1){t?a.data.extra_config[s][t][e]=n:a.data.extra_config[s][e]=n},a.deleteKey=function(e,n=!1){n?delete a.data.extra_config[s][n][e]:delete a.data.extra_config[s][e]},a.addTermToList=function(e,n){void 0===e||e.length<1||(void 0===a.data.extra_config[s][n]&&(a.data.extra_config[s][n]=[]),-1===a.data.extra_config[s][n].indexOf(e)&&a.data.extra_config[s][n].push(e))},a.deleteIndexFromList=function(e,n){a.data.extra_config[s][n].splice(e,1)}}}}])},function(e,n){angular.module("KrakenDesigner").service("InputValidator",function(){return{isInteger:function(e){return angular.isNumber(e)},isEmpty:function(e){return void 0===e||"object"==typeof e&&1>e.length||!e},isValidTimeUnit:function(e){return void 0===e||""==e||/^\d+(ns|us|µs|ms|s|m|h)$/.test(e)},hasHTTP:function(e){return/^https?:\/\/.+/i.test(e)}}})},function(e,n){angular.module("KrakenDesigner").service("Constants",function(){return{jose_algorithms:{EdDSA:"EdDSA",HS256:"HS256 - HMAC using SHA-256",HS384:"HS384 - HMAC using SHA-384",HS512:"HS512 - HMAC using SHA-512",RS256:"RS256 - RSASSA-PKCS-v1.5 using SHA-256",RS384:"RS384 - RSASSA-PKCS-v1.5 using SHA-384",RS512:"RS512 - RSASSA-PKCS-v1.5 using SHA-512",ES256:"ES256 - ECDSA using P-256 and SHA-256",ES384:"ES384 - ECDSA using P-384 and SHA-384",ES512:"ES512 - ECDSA using P-521 and SHA-512",PS256:"PS256 - RSASSA-PSS using SHA256 and MGF1-SHA256",PS384:"PS384 - RSASSA-PSS using SHA384 and MGF1-SHA384",PS512:"PS512 - RSASSA-PSS using SHA512 and MGF1-SHA512"},jose_cipher_suites:{5:"TLS_RSA_WITH_RC4_128_SHA",10:"TLS_RSA_WITH_3DES_EDE_CBC_SHA",47:"TLS_RSA_WITH_AES_128_CBC_SHA",53:"TLS_RSA_WITH_AES_256_CBC_SHA",60:"TLS_RSA_WITH_AES_128_CBC_SHA256",156:"TLS_RSA_WITH_AES_128_GCM_SHA256",157:"TLS_RSA_WITH_AES_256_GCM_SHA384",49159:"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA",49161:"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",49162:"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",49169:"TLS_ECDHE_RSA_WITH_RC4_128_SHA",49170:"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA",49171:"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",49172:"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",49187:"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",49191:"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",49199:"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",49195:"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",49200:"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",49196:"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",52392:"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305",52393:"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305"}}})},function(e,n){angular.module("KrakenDesigner").service("DefaultConfig",function(){return{service:{version:2,extra_config:{}},extra_config:{"github_com/devopsfaith/krakend-metrics":{collection_time:"60s",proxy_disabled:!1,router_disabled:!1,backend_disabled:!1,endpoint_disabled:!1,listen_address:":8090"},"github_com/devopsfaith/krakend-oauth2-clientcredentials":{endpoint_params:{}},"github_com/devopsfaith/krakend-httpsecure":{allowed_hosts:[],ssl_proxy_headers:{}},"github_com/devopsfaith/krakend-etcd":{machines:[],dial_timeout:"5s",dial_keepalive:"30s",header_timeout:"1s"},"github_com/devopsfaith/krakend-gologging":{level:"ERROR",prefix:"[KRAKEND]",syslog:!1,stdout:!0},"github_com/devopsfaith/krakend-cors":{allow_methods:["GET","HEAD","POST"]},"github.com/devopsfaith/krakend-ratelimit/juju/router":{maxRate:0,clientMaxRate:0,strategy:"ip"},"github.com/devopsfaith/krakend-jose/signer":{alg:"HS256"},"github.com/devopsfaith/krakend-jose/validator":{alg:"HS256"}}}})},function(e,n){(function(n){e.exports=n}).call(this,{})},function(e,n){e.exports=function(){throw new Error("define cannot be used indirect")}},function(e,n,t){var a,i=i||function(e){"use strict";if(!(void 0===e||"undefined"!=typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))){var n=function(){return e.URL||e.webkitURL||e},t=e.document.createElementNS("http://www.w3.org/1999/xhtml","a"),a="download"in t,i=/constructor/i.test(e.HTMLElement)||e.safari,o=/CriOS\/[\d]+/.test(navigator.userAgent),s=function(n){(e.setImmediate||e.setTimeout)(function(){throw n},0)},l=function(e){setTimeout(function(){"string"==typeof e?n().revokeObjectURL(e):e.remove()},4e4)},c=function(e){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob([String.fromCharCode(65279),e],{type:e.type}):e},d=function(d,r,p){p||(d=c(d));var g,u=this,m="application/octet-stream"===d.type,v=function(){!function(e,n,t){for(var a=(n=[].concat(n)).length;a--;){var i=e["on"+n[a]];if("function"==typeof i)try{i.call(e,t||e)}catch(e){s(e)}}}(u,"writestart progress write writeend".split(" "))};if(u.readyState=u.INIT,a)return g=n().createObjectURL(d),void setTimeout(function(){var e,n;t.href=g,t.download=r,e=t,n=new MouseEvent("click"),e.dispatchEvent(n),v(),l(g),u.readyState=u.DONE});!function(){if((o||m&&i)&&e.FileReader){var t=new FileReader;return t.onloadend=function(){var n=o?t.result:t.result.replace(/^data:[^;]*;/,"data:attachment/file;");e.open(n,"_blank")||(e.location.href=n),n=void 0,u.readyState=u.DONE,v()},t.readAsDataURL(d),void(u.readyState=u.INIT)}g||(g=n().createObjectURL(d)),m?e.location.href=g:e.open(g,"_blank")||(e.location.href=g);u.readyState=u.DONE,v(),l(g)}()},r=d.prototype;return"undefined"!=typeof navigator&&navigator.msSaveOrOpenBlob?function(e,n,t){return n=n||e.name||"download",t||(e=c(e)),navigator.msSaveOrOpenBlob(e,n)}:(r.abort=function(){},r.readyState=r.INIT=0,r.WRITING=1,r.DONE=2,r.error=r.onwritestart=r.onprogress=r.onwrite=r.onabort=r.onerror=r.onwriteend=null,function(e,n,t){return new d(e,n||e.name||"download",t)})}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||this.content);void 0!==e&&e.exports?e.exports.saveAs=i:null!==t(8)&&null!==t(7)&&(void 0===(a=function(){return i}.call(n,t,n,e))||(e.exports=a))},function(module,exports,__webpack_require__){var FileSaver=__webpack_require__(9);function downloadDocument(e,n){FileSaver.saveAs(new Blob([n],{type:"text/plain;charset=UTF-8"}),e,!0)}angular.module("KrakenDesigner").controller("KrakenDesignerController",function($scope,$rootScope,$location,DefaultConfig,Constants){$rootScope.service=DefaultConfig.service,$rootScope.constants=Constants,$rootScope.save=function(){if(void 0===$rootScope.service.endpoints||$rootScope.service.endpoints.length<1)return alert("At least you need to define an endpoint"),!1;$rootScope.fixCipherSuitesType("github.com/devopsfaith/krakend-jose/signer",!1),$rootScope.fixCipherSuitesType("github.com/devopsfaith/krakend-jose/validator",!1),downloadDocument((new Date).getTime()+"-krakend.json",angular.toJson($rootScope.service,!0)),$rootScope.saved_once=!0},$rootScope.loadFile=function(){try{var e=JSON.parse($scope.service_configuration);DefaultConfig.service=e,$rootScope.service=DefaultConfig.service,$rootScope.dropzone_loaded=!0}catch(e){alert("Failed to parse the selected JSON file.\n\n"+e.message)}$rootScope.fixCipherSuitesType("github.com/devopsfaith/krakend-jose/validator",!0),$rootScope.fixCipherSuitesType("github.com/devopsfaith/krakend-jose/signer",!0),$rootScope.loadSDOptions()},$rootScope.fixCipherSuitesType=function(e,n){if(void 0!==$rootScope.service&&void 0!==$rootScope.service.endpoints)for(var t=0;t<$rootScope.service.endpoints.length;t++)if(void 0!==$rootScope.service.endpoints[t].extra_config&&void 0!==$rootScope.service.endpoints[t].extra_config[e]&&void 0!==$rootScope.service.endpoints[t].extra_config[e].cipher_suites)for(var a=0;a<$rootScope.service.endpoints[t].extra_config[e].cipher_suites.length;a++)$rootScope.service.endpoints[t].extra_config[e].cipher_suites[a]=n?""+$rootScope.service.endpoints[t].extra_config[e].cipher_suites[a]:parseInt($rootScope.service.endpoints[t].extra_config[e].cipher_suites[a])},$rootScope.loadSDOptions=function(){var e="static";if(void 0!==$rootScope.service.endpoints)for(var n=0;n<$rootScope.service.endpoints.length;n++)if(void 0!==$rootScope.service.endpoints[n].backend){e="static";for(var t=0;t<$rootScope.service.endpoints[n].backend.length;t++)if(void 0!==$rootScope.service.endpoints[n].backend[t].sd&&(e=$rootScope.service.endpoints[n].backend[t].sd),void 0!==$rootScope.service.endpoints[n].backend[t].host)for(var a=0;a<$rootScope.service.endpoints[n].backend[t].host.length;a++)$rootScope.addHost($rootScope.service.endpoints[n].backend[t].host[a],e)}},$rootScope.hasMiddleware=function(e){return!(void 0===$rootScope.service.extra_config||void 0===$rootScope.service.extra_config[e])},$rootScope.toggleMiddleware=function(e){$rootScope.hasMiddleware(e)?delete $rootScope.service.extra_config[e]:void 0!==DefaultConfig.extra_config[e]?$rootScope.service.extra_config[e]=DefaultConfig.extra_config[e]:$rootScope.service.extra_config[e]={}},$rootScope.addTermToArray=function(term,array){return"string"==typeof array&&(array=eval(array)),void 0!==array&&(-1===array.indexOf(term)&&void array.push(term))},$rootScope.deleteIndexFromArray=function(index,array_qualified_name){var array=eval(array_qualified_name);array.splice(index,1)},$rootScope.addHost=function(e,n){if("static"===n&&!/^https?:\/\/.+/i.test(e))return alert("Please include de protocol http in the URL"),!1;void 0===$rootScope.sd_providers&&($rootScope.sd_providers={}),void 0===$rootScope.sd_providers.hosts&&($rootScope.sd_providers.hosts=[]),void 0===$rootScope.sd_providers.providers&&($rootScope.sd_providers.providers=[]);for(var t=0;t<$rootScope.sd_providers.hosts.length;t++)if($rootScope.sd_providers.hosts[t].sd===n&&$rootScope.sd_providers.hosts[t].host===e)return!1;$rootScope.sd_providers.hosts.push({sd:n,host:e}),$rootScope.addTermToArray(n,$rootScope.sd_providers.providers)},$rootScope.deleteWhitelist=function(e,n,t){$rootScope.service.endpoints[t].backend[n].whitelist.splice(e-1,1)},$rootScope.deleteBlacklist=function(e,n,t){$rootScope.service.endpoints[t].backend[n].blacklist.splice(e-1,1)},$rootScope.addWhitelist=function(e,n){var t="#wl"+e+n;void 0===$rootScope.service.endpoints[e].backend[n].whitelist&&($rootScope.service.endpoints[e].backend[n].whitelist=[]),$rootScope.addTermToArray($(t).val(),$rootScope.service.endpoints[e].backend[n].whitelist)},$rootScope.addBlacklist=function(e,n){var t="#bl"+e+n;void 0===$rootScope.service.endpoints[e].backend[n].blacklist&&($rootScope.service.endpoints[e].backend[n].blacklist=[]),$rootScope.addTermToArray($(t).val(),$rootScope.service.endpoints[e].backend[n].blacklist)},$rootScope.addTransformation=function(e,n){var t=$("#tr_target"+e+n).val(),a=$("#tr_origin"+e+n).val();void 0===$rootScope.service.endpoints[e].backend[n].mapping&&($rootScope.service.endpoints[e].backend[n].mapping={}),$rootScope.service.endpoints[e].backend[n].mapping[a]=t},$rootScope.deleteTransformation=function(e,n,t){delete $rootScope.service.endpoints[n].backend[t].mapping[e]},$rootScope.addEndpoint=function(){if(void 0===$rootScope.sd_providers||void 0===$rootScope.sd_providers.hosts||1<$rootScope.service.length)return alert("You need to add at least one host in the Service Configuration or Service Discovery panels."),!1;void 0===$rootScope.service.endpoints&&($rootScope.service.endpoints=[]),$rootScope.service.endpoints.push({endpoint:"/",method:"GET"})},$rootScope.isValidEndpoint=function(e){return!/^[^\/]|\/__debug(\/.*)?$|\/favicon\.ico/i.test(e)},$rootScope.isValidTimeUnit=function(e){return void 0===e||""==e||/^\d+(ns|us|µs|ms|s|m|h)$/.test(e)},$rootScope.isInteger=function(e){return void 0===e||""==e||/^\d+$/.test(e)},$rootScope.deleteEndpoint=function(e,n){confirm(n)&&$rootScope.service.endpoints.splice(e,1)},$rootScope.updateNonGETBackends=function(e,n,t){(void 0===$rootScope.service.endpoints[e].backend?0:$rootScope.service.endpoints[e].backend.length)>1&&("GET"==n&&confirm(t)?$rootScope.service.endpoints[e].backend.splice(1,1e4):$rootScope.service.endpoints[e].method="GET")},$rootScope.setNoOpEncoding=function(e,n,t,a){var i=void 0===$rootScope.service.endpoints[e].backend?0:$rootScope.service.endpoints[e].backend.length;"noop"==n&&i>0&&(confirm("Selecting the No-Operation means that this endpoint will proxy all content to a *single backend* where no response manipulation is desired.\n\nThe noop option will be automatically set for both the backend and the endpoint. Existing backend settings for this endpoint will be discarded.\n\n Do you want to proceed?")?(delete $rootScope.service.endpoints[e].backend,$rootScope.service.endpoints[e].output_encoding="noop",$rootScope.addBackendQuery(e),void 0!==$rootScope.service.endpoints[e].extra_config["github.com/devopsfaith/krakend/proxy"]&&delete $rootScope.service.endpoints[e].extra_config["github.com/devopsfaith/krakend/proxy"]):null===a?$rootScope.service.endpoints[e].output_encoding=t:$rootScope.service.endpoints[e].backend[a].encoding=t)},$rootScope.addBackendQuery=function(e){void 0===$rootScope.service.endpoints[e].backend&&($rootScope.service.endpoints[e].backend=[]),$rootScope.service.endpoints[e].backend.push({url_pattern:"/",encoding:$rootScope.service.endpoints[e].output_encoding})},$rootScope.toggleCaching=function(e,n,t){e.target.checked?$rootScope.service.endpoints[n].backend[t].extra_config["github.com/devopsfaith/krakend-httpcache"]={}:delete $rootScope.service.endpoints[n].backend[t].extra_config["github.com/devopsfaith/krakend-httpcache"]},$rootScope.deleteBackendQuery=function(e,n,t){confirm(t)&&$rootScope.service.endpoints[e].backend.splice(n,1)},$rootScope.addDefaultStaticResponse=function(e){void 0===$rootScope.service.endpoints[e].extra_config&&($rootScope.service.endpoints[e].extra_config={}),void 0===$rootScope.service.endpoints[e].extra_config["github.com/devopsfaith/krakend/proxy"]&&($rootScope.service.endpoints[e].extra_config["github.com/devopsfaith/krakend/proxy"]={static:{data:{new_field_a:123,new_field_b:["arr1","arr2"],new_field_c:{obj:"obj1"}},strategy:"incomplete"}})},$rootScope.deleteStaticResponse=function(e){delete $rootScope.service.endpoints[e].extra_config["github.com/devopsfaith/krakend/proxy"]},$rootScope.addQuerystring=function(e){void 0===$rootScope.service.endpoints[e].querystring_params&&($rootScope.service.endpoints[e].querystring_params=[]);var n=document.getElementById("addQuerystring_"+e).value;n.length>0&&-1===$rootScope.service.endpoints[e].querystring_params.indexOf(n)&&$rootScope.service.endpoints[e].querystring_params.push(n)},$rootScope.deleteQuerystring=function(e,n){$rootScope.service.endpoints[n].querystring_params.splice(e,1)},$rootScope.addHeaderPassing=function(e,n){void 0===$rootScope.service.endpoints[e].headers_to_pass&&($rootScope.service.endpoints[e].headers_to_pass=[]),$rootScope.addTermToArray(n,$rootScope.service.endpoints[e].headers_to_pass)},$rootScope.deleteHeaderPassing=function(e,n){$rootScope.service.endpoints[e].headers_to_pass.splice(n,1)}}),window.onbeforeunload=function(){return"Leaving now implies losing the changes configured if you didn't save. Are you sure?"}},function(e,n){!function(){"use strict";function e(e){e.when("/",{templateUrl:"/src/app/forms/dashboard.html",controller:"KrakenDesignerController"}).when("/service",{templateUrl:"/src/app/forms/service_configuration.html",controller:"KrakenDesignerController"}).when("/endpoints",{templateUrl:"/src/app/forms/endpoints.html",controller:"KrakenDesignerController"}).when("/oauth",{templateUrl:"/src/app/forms/oauth.html",controller:"KrakenDesignerController"}).when("/security",{templateUrl:"/src/app/forms/security.html",controller:"KrakenDesignerController"}).when("/service-discovery",{templateUrl:"/src/app/forms/service_discovery.html",controller:"KrakenDesignerController"}).when("/logging",{templateUrl:"/src/app/forms/logging.html",controller:"KrakenDesignerController"}).otherwise({redirectTo:"/"})}angular.module("KrakenDesigner",["ngRoute"]).config(e),e.$inject=["$routeProvider"]}()},function(e,n,t){"use strict";t.r(n);t(11),t(10),t(6),t(5),t(4),t(3),t(2),t(1),t(0)}]);